{
  "hash": "d7f56b150bc71c904cca214fcdb3d856",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Geospatial with R\"\nsubtitle: \"Handling raster data with `terra`\"\nexecute:\n  freeze: auto\n---\n\n\n\n\n\nThis is my practice sections following [R as GIS for Economists](https://tmieno2.github.io/R-as-GIS-for-Economists-Quarto/).\n\n### Basics\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: pacman\n```\n\n\n:::\n\n```{.r .cell-code}\npacman::p_load(terra, raster, mapview, dplyr, sf, lubridate, downloader)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n  IA_cdl_2015 <- raster::raster(\"Data/IA_cdl_2015.tif\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass      : RasterLayer \ndimensions : 11671, 17795, 207685445  (nrow, ncol, ncell)\nresolution : 30, 30  (x, y)\nextent     : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncrs        : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nsource     : IA_cdl_2015.tif \nnames      : Layer_1 \nvalues     : 0, 229  (min, max)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nIA_cdl_2016 <- raster::raster(\"Data/IA_CDL_2016.tif\")\n\n#--- stack the two ---#\n(\n  IA_cdl_stack <- raster::stack(IA_cdl_2015, IA_cdl_2016)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass      : RasterStack \ndimensions : 11671, 17795, 207685445, 2  (nrow, ncol, ncell, nlayers)\nresolution : 30, 30  (x, y)\nextent     : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncrs        : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nnames      : Layer_1, IA_CDL_2016 \nmin values :       0,           0 \nmax values :     229,         241 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# I am not evaluating this cell because it takes quite some time to execute.\n#--- stack the two ---#\nIA_cdl_brick <- brick(IA_cdl_stack)\n\n#--- or this works as well ---#\n# IA_cdl_brick <- brick(IA_cdl_2015, IA_cdl_2016)\n\n#--- take a look ---#\nIA_cdl_brick\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- convert to a SpatRaster ---#\nIA_cdl_2015_sr <- terra::rast(IA_cdl_2015)\n\n#--- convert to a SpatRaster ---#\nIA_cdl_stack_sr <- terra::rast(IA_cdl_stack)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: [rast] CRS do not match\n```\n\n\n:::\n\n```{.r .cell-code}\n#--- take a look ---#\nIA_cdl_2015_sr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 11671, 17795, 1  (nrow, ncol, nlyr)\nresolution  : 30, 30  (x, y)\nextent      : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nsource      : IA_cdl_2015.tif \nname        : Layer_1 \nmin value   :       0 \nmax value   :     229 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a single-layer from multiple single-layer\nIA_cdl_2016_sr <- terra::rast(IA_cdl_2016)\n\n# concatenate\n(\n    IA_cdl_ml_sr <- c(IA_cdl_2015_sr, IA_cdl_2016_sr)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: [rast] CRS do not match\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 11671, 17795, 2  (nrow, ncol, nlyr)\nresolution  : 30, 30  (x, y)\nextent      : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nsources     : IA_cdl_2015.tif  \n              IA_CDL_2016.tif  \ncolor table : 2 \nnames       : Layer_1, IA_CDL_2016 \nmin values  :       0,           0 \nmax values  :     229,         241 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nIA_cdl_stack_sr %>% raster::raster()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass      : RasterLayer \ndimensions : 11671, 17795, 207685445  (nrow, ncol, ncell)\nresolution : 30, 30  (x, y)\nextent     : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncrs        : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nsource     : IA_cdl_2015.tif \nnames      : Layer_1 \nvalues     : 0, 229  (min, max)\n```\n\n\n:::\n\n```{.r .cell-code}\n#  %>% raster::stack()\n#  %>% raster::brick() \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- Illinois county boundary ---#\n(\n  IL_county <- \n    tigris::counties(\n      state = \"Illinois\", \n      progress_bar = FALSE\n    ) %>%\n    dplyr::select(STATEFP, COUNTYFP)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRetrieving data for the year 2022\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 102 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -91.51308 ymin: 36.9703 xmax: -87.01994 ymax: 42.50848\nGeodetic CRS:  NAD83\nFirst 10 features:\n    STATEFP COUNTYFP                       geometry\n86       17      067 MULTIPOLYGON (((-90.90609 4...\n92       17      025 MULTIPOLYGON (((-88.69516 3...\n131      17      185 MULTIPOLYGON (((-87.89243 3...\n148      17      113 MULTIPOLYGON (((-88.91954 4...\n158      17      005 MULTIPOLYGON (((-89.37207 3...\n159      17      009 MULTIPOLYGON (((-90.53674 3...\n213      17      083 MULTIPOLYGON (((-90.1459 39...\n254      17      147 MULTIPOLYGON (((-88.46335 4...\n266      17      151 MULTIPOLYGON (((-88.48289 3...\n303      17      011 MULTIPOLYGON (((-89.16654 4...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    IL_county_sv <- terra::vect(IL_county)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n class       : SpatVector \n geometry    : polygons \n dimensions  : 102, 2  (geometries, attributes)\n extent      : -91.51308, -87.01994, 36.9703, 42.50848  (xmin, xmax, ymin, ymax)\n coord. ref. : lon/lat NAD83 (EPSG:4269) \n names       : STATEFP COUNTYFP\n type        :   <chr>    <chr>\n values      :      17      067\n                    17      025\n                    17      185\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    IA_cdl_2015_sr <- terra::rast(\"Data/IA_cdl_2015.tif\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 11671, 17795, 1  (nrow, ncol, nlyr)\nresolution  : 30, 30  (x, y)\nextent      : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nsource      : IA_cdl_2015.tif \nname        : Layer_1 \nmin value   :       0 \nmax value   :     229 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- the list of path to the files ---#\nfiles_list <- c(\"Data/IA_cdl_2015.tif\", \"Data/IA_CDL_2016.tif\")\n\n#--- read the two at the same time ---#\n(\n  multi_layer_sr <- terra::rast(files_list)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: [rast] CRS do not match\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 11671, 17795, 2  (nrow, ncol, nlyr)\nresolution  : 30, 30  (x, y)\nextent      : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nsources     : IA_cdl_2015.tif  \n              IA_CDL_2016.tif  \ncolor table : 2 \nnames       : Layer_1, IA_CDL_2016 \nmin values  :       0,           0 \nmax values  :     229,         241 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nterra::crs(IA_cdl_2015_sr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"BOUNDCRS[\\n    SOURCECRS[\\n        PROJCRS[\\\"unnamed\\\",\\n            BASEGEOGCRS[\\\"GRS 1980(IUGG, 1980)\\\",\\n                DATUM[\\\"unknown\\\",\\n                    ELLIPSOID[\\\"GRS80\\\",6378137,298.257222101,\\n                        LENGTHUNIT[\\\"metre\\\",1,\\n                            ID[\\\"EPSG\\\",9001]]]],\\n                PRIMEM[\\\"Greenwich\\\",0,\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                        ID[\\\"EPSG\\\",9122]]]],\\n            CONVERSION[\\\"Albers Equal Area\\\",\\n                METHOD[\\\"Albers Equal Area\\\",\\n                    ID[\\\"EPSG\\\",9822]],\\n                PARAMETER[\\\"Latitude of false origin\\\",23,\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n                    ID[\\\"EPSG\\\",8821]],\\n                PARAMETER[\\\"Longitude of false origin\\\",-96,\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n                    ID[\\\"EPSG\\\",8822]],\\n                PARAMETER[\\\"Latitude of 1st standard parallel\\\",29.5,\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n                    ID[\\\"EPSG\\\",8823]],\\n                PARAMETER[\\\"Latitude of 2nd standard parallel\\\",45.5,\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n                    ID[\\\"EPSG\\\",8824]],\\n                PARAMETER[\\\"Easting at false origin\\\",0,\\n                    LENGTHUNIT[\\\"metre\\\",1],\\n                    ID[\\\"EPSG\\\",8826]],\\n                PARAMETER[\\\"Northing at false origin\\\",0,\\n                    LENGTHUNIT[\\\"metre\\\",1],\\n                    ID[\\\"EPSG\\\",8827]]],\\n            CS[Cartesian,2],\\n                AXIS[\\\"easting\\\",east,\\n                    ORDER[1],\\n                    LENGTHUNIT[\\\"metre\\\",1,\\n                        ID[\\\"EPSG\\\",9001]]],\\n                AXIS[\\\"northing\\\",north,\\n                    ORDER[2],\\n                    LENGTHUNIT[\\\"metre\\\",1,\\n                        ID[\\\"EPSG\\\",9001]]]]],\\n    TARGETCRS[\\n        GEOGCRS[\\\"WGS 84\\\",\\n            DATUM[\\\"World Geodetic System 1984\\\",\\n                ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                    LENGTHUNIT[\\\"metre\\\",1]]],\\n            PRIMEM[\\\"Greenwich\\\",0,\\n                ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n            CS[ellipsoidal,2],\\n                AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n                    ORDER[1],\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n                AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n                    ORDER[2],\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n            USAGE[\\n                SCOPE[\\\"Horizontal component of 3D system.\\\"],\\n                AREA[\\\"World.\\\"],\\n                BBOX[-90,-180,90,180]],\\n            ID[\\\"EPSG\\\",4326]]],\\n    ABRIDGEDTRANSFORMATION[\\\"Transformation to WGS84\\\",\\n        METHOD[\\\"Position Vector transformation (geog2D domain)\\\",\\n            ID[\\\"EPSG\\\",9606]],\\n        PARAMETER[\\\"X-axis translation\\\",0,\\n            ID[\\\"EPSG\\\",8605]],\\n        PARAMETER[\\\"Y-axis translation\\\",0,\\n            ID[\\\"EPSG\\\",8606]],\\n        PARAMETER[\\\"Z-axis translation\\\",0,\\n            ID[\\\"EPSG\\\",8607]],\\n        PARAMETER[\\\"X-axis rotation\\\",0,\\n            ID[\\\"EPSG\\\",8608]],\\n        PARAMETER[\\\"Y-axis rotation\\\",0,\\n            ID[\\\"EPSG\\\",8609]],\\n        PARAMETER[\\\"Z-axis rotation\\\",0,\\n            ID[\\\"EPSG\\\",8610]],\\n        PARAMETER[\\\"Scale difference\\\",1,\\n            ID[\\\"EPSG\\\",8611]]]]\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# index\nIA_cdl_stack_sr[[2]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 11671, 17795, 1  (nrow, ncol, nlyr)\nresolution  : 30, 30  (x, y)\nextent      : -52095, 481755, 1938165, 2288295  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nsource      : IA_CDL_2016.tif \ncolor table : 1 \nname        : IA_CDL_2016 \nmin value   :           0 \nmax value   :         241 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvalues_from_rs <- terra::values(IA_cdl_stack_sr)\n\nhead(values_from_rs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Layer_1 IA_CDL_2016\n[1,]       0           0\n[2,]       0           0\n[3,]       0           0\n[4,]       0           0\n[5,]       0           0\n[6,]       0           0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(IA_cdl_2015_sr)\n```\n\n::: {.cell-output-display}\n![](terra-raster-data_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(terra, tidyterra, raster, exactextractr, sf, dplyr, tidyr, data.table, prism, tictoc, tigris)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- set the path to the folder to which you save the downloaded PRISM data ---#\n# This code sets the current working directory as the designated folder\noptions(prism.path = \"Data\")\n\n#--- download PRISM precipitation data ---#\nprism::get_prism_dailys(\n  type = \"tmax\",\n  date = \"2018-07-01\",\n  keepZip = FALSE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nPRISM_tmax_stable_4kmD2_20180701_bil.zip already exists. Skipping downloading.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n```{.r .cell-code}\n#--- the file name of the PRISM data just downloaded ---#\nprism_file <- \"Data/PRISM_tmax_stable_4kmD2_20180701_bil/PRISM_tmax_stable_4kmD2_20180701_bil.bil\"\n\n#--- read in the prism data ---#\nprism_tmax_0701_sr <- terra::rast(prism_file)\n\n\n#--- Kansas boundary (sf) ---#\nKS_county_sf <-\n  #--- get Kansas county boundary ---\n  tigris::counties(state = \"Kansas\", cb = TRUE) %>%\n  #--- sp to sf ---#\n  sf::st_as_sf() %>%\n  #--- transform using the CRS of the PRISM tmax data  ---#\n  sf::st_transform(terra::crs(prism_tmax_0701_sr))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRetrieving data for the year 2022\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nDownloading: 32 kB     \nDownloading: 32 kB     \nDownloading: 81 kB     \nDownloading: 81 kB     \nDownloading: 160 kB     \nDownloading: 160 kB     \nDownloading: 240 kB     \nDownloading: 240 kB     \nDownloading: 410 kB     \nDownloading: 410 kB     \nDownloading: 510 kB     \nDownloading: 510 kB     \nDownloading: 690 kB     \nDownloading: 690 kB     \nDownloading: 720 kB     \nDownloading: 720 kB     \nDownloading: 720 kB     \nDownloading: 720 kB     \nDownloading: 770 kB     \nDownloading: 770 kB     \nDownloading: 870 kB     \nDownloading: 870 kB     \nDownloading: 960 kB     \nDownloading: 960 kB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.2 MB     \nDownloading: 1.2 MB     \nDownloading: 1.4 MB     \nDownloading: 1.4 MB     \nDownloading: 1.5 MB     \nDownloading: 1.5 MB     \nDownloading: 1.5 MB     \nDownloading: 1.5 MB     \nDownloading: 1.7 MB     \nDownloading: 1.7 MB     \nDownloading: 1.9 MB     \nDownloading: 1.9 MB     \nDownloading: 1.9 MB     \nDownloading: 1.9 MB     \nDownloading: 1.9 MB     \nDownloading: 1.9 MB     \nDownloading: 2.1 MB     \nDownloading: 2.1 MB     \nDownloading: 2.3 MB     \nDownloading: 2.3 MB     \nDownloading: 2.5 MB     \nDownloading: 2.5 MB     \nDownloading: 2.7 MB     \nDownloading: 2.7 MB     \nDownloading: 2.8 MB     \nDownloading: 2.8 MB     \nDownloading: 3 MB     \nDownloading: 3 MB     \nDownloading: 3.2 MB     \nDownloading: 3.2 MB     \nDownloading: 3.4 MB     \nDownloading: 3.4 MB     \nDownloading: 3.5 MB     \nDownloading: 3.5 MB     \nDownloading: 3.5 MB     \nDownloading: 3.5 MB     \nDownloading: 3.7 MB     \nDownloading: 3.7 MB     \nDownloading: 3.7 MB     \nDownloading: 3.7 MB     \nDownloading: 3.8 MB     \nDownloading: 3.8 MB     \nDownloading: 3.8 MB     \nDownloading: 3.8 MB     \nDownloading: 4 MB     \nDownloading: 4 MB     \nDownloading: 4 MB     \nDownloading: 4 MB     \nDownloading: 4 MB     \nDownloading: 4 MB     \nDownloading: 4.3 MB     \nDownloading: 4.3 MB     \nDownloading: 4.4 MB     \nDownloading: 4.4 MB     \nDownloading: 4.5 MB     \nDownloading: 4.5 MB     \nDownloading: 4.7 MB     \nDownloading: 4.7 MB     \nDownloading: 4.9 MB     \nDownloading: 4.9 MB     \nDownloading: 5.1 MB     \nDownloading: 5.1 MB     \nDownloading: 5.3 MB     \nDownloading: 5.3 MB     \nDownloading: 5.4 MB     \nDownloading: 5.4 MB     \nDownloading: 5.6 MB     \nDownloading: 5.6 MB     \nDownloading: 5.8 MB     \nDownloading: 5.8 MB     \nDownloading: 5.9 MB     \nDownloading: 5.9 MB     \nDownloading: 6 MB     \nDownloading: 6 MB     \nDownloading: 6 MB     \nDownloading: 6 MB     \nDownloading: 6.2 MB     \nDownloading: 6.2 MB     \nDownloading: 6.4 MB     \nDownloading: 6.4 MB     \nDownloading: 6.6 MB     \nDownloading: 6.6 MB     \nDownloading: 6.7 MB     \nDownloading: 6.7 MB     \nDownloading: 6.9 MB     \nDownloading: 6.9 MB     \nDownloading: 7.1 MB     \nDownloading: 7.1 MB     \nDownloading: 7.3 MB     \nDownloading: 7.3 MB     \nDownloading: 7.5 MB     \nDownloading: 7.5 MB     \nDownloading: 7.6 MB     \nDownloading: 7.6 MB     \nDownloading: 7.6 MB     \nDownloading: 7.6 MB     \nDownloading: 7.7 MB     \nDownloading: 7.7 MB     \nDownloading: 7.9 MB     \nDownloading: 7.9 MB     \nDownloading: 8 MB     \nDownloading: 8 MB     \nDownloading: 8.1 MB     \nDownloading: 8.1 MB     \nDownloading: 8.2 MB     \nDownloading: 8.2 MB     \nDownloading: 8.5 MB     \nDownloading: 8.5 MB     \nDownloading: 8.7 MB     \nDownloading: 8.7 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.1 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.2 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.3 MB     \nDownloading: 9.4 MB     \nDownloading: 9.4 MB     \nDownloading: 9.4 MB     \nDownloading: 9.4 MB     \nDownloading: 9.5 MB     \nDownloading: 9.5 MB     \nDownloading: 9.5 MB     \nDownloading: 9.5 MB     \nDownloading: 9.6 MB     \nDownloading: 9.6 MB     \nDownloading: 9.7 MB     \nDownloading: 9.7 MB     \nDownloading: 9.8 MB     \nDownloading: 9.8 MB     \nDownloading: 9.9 MB     \nDownloading: 9.9 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 10 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 11 MB     \nDownloading: 12 MB     \nDownloading: 12 MB     \nDownloading: 12 MB     \nDownloading: 12 MB     \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# terra::(SpatRaster, sf)\n\nprism_tmax_0701_KS_sr <- \n  terra::crop(\n    prism_tmax_0701_sr,\n    KS_county_sf\n  )\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats 1.0.0     ✔ readr   2.1.5\n✔ ggplot2 3.5.1     ✔ stringr 1.5.1\n✔ purrr   1.0.4     ✔ tibble  3.2.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ data.table::between() masks dplyr::between()\n✖ tidyr::extract()      masks raster::extract(), terra::extract()\n✖ tidyterra::filter()   masks dplyr::filter(), stats::filter()\n✖ data.table::first()   masks dplyr::first()\n✖ data.table::hour()    masks lubridate::hour()\n✖ data.table::isoweek() masks lubridate::isoweek()\n✖ dplyr::lag()          masks stats::lag()\n✖ data.table::last()    masks dplyr::last()\n✖ data.table::mday()    masks lubridate::mday()\n✖ data.table::minute()  masks lubridate::minute()\n✖ data.table::month()   masks lubridate::month()\n✖ data.table::quarter() masks lubridate::quarter()\n✖ data.table::second()  masks lubridate::second()\n✖ tidyterra::select()   masks dplyr::select(), raster::select()\n✖ purrr::transpose()    masks data.table::transpose()\n✖ data.table::wday()    masks lubridate::wday()\n✖ data.table::week()    masks lubridate::week()\n✖ data.table::yday()    masks lubridate::yday()\n✖ data.table::year()    masks lubridate::year()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot() +\n  geom_spatraster(data = prism_tmax_0701_KS_sr) +\n  geom_sf(data = KS_county_sf, fill = NA, color = \"blue\") +\n  scale_fill_whitebox_c(\n    name = \"tmax\",\n    palette = \"muted\",\n    labels = scales::label_number(suffix = \"o\"),\n    n.breaks = 12,\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](terra-raster-data_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- download PRISM precipitation data ---#\nprism::get_prism_dailys(\n  type = \"tmax\",\n  date = \"2018-07-02\",\n  keepZip = FALSE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nPRISM_tmax_stable_4kmD2_20180702_bil.zip already exists. Skipping downloading.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n```{.r .cell-code}\n#--- the file name of the PRISM data just downloaded ---#\nprism_file <- \"Data/PRISM_tmax_stable_4kmD2_20180702_bil/PRISM_tmax_stable_4kmD2_20180702_bil.bil\"\n\n#--- read in the prism data and crop it to Kansas state border ---#\nprism_tmax_0702_KS_sr <-\n  terra::rast(prism_file) %>%\n  terra::crop(KS_county_sf)\n\n#--- read in the KS points data ---#\n(\n  KS_wells <- readRDS(\"Data/Chap_5_wells_KS.rds\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 37647 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -102.0495 ymin: 36.99552 xmax: -94.62089 ymax: 40.00199\nGeodetic CRS:  NAD83\nFirst 10 features:\n   well_id                   geometry\n1        1 POINT (-100.4423 37.52046)\n2        3 POINT (-100.7118 39.91526)\n3        5 POINT (-99.15168 38.48849)\n4        7 POINT (-101.8995 38.78077)\n5        8  POINT (-100.7122 38.0731)\n6        9 POINT (-97.70265 39.04055)\n7       11 POINT (-101.7114 39.55035)\n8       12 POINT (-95.97031 39.16121)\n9       15 POINT (-98.30759 38.26787)\n10      17 POINT (-100.2785 37.71539)\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot()  +\n  geom_sf(data = KS_county_sf, fill = NA) +\n  geom_sf(data = KS_wells, size = 0.05) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](terra-raster-data_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# terra:extract(raster, points)\n\ntmax_from_prism <- terra::extract(prism_tmax_0701_KS_sr, KS_wells)\n\nhead(tmax_from_prism)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID PRISM_tmax_stable_4kmD2_20180701_bil\n1  1                               34.241\n2  2                               29.288\n3  3                               32.585\n4  4                               30.104\n5  5                               34.232\n6  6                               35.168\n```\n\n\n:::\n\n```{.r .cell-code}\nKS_wells$tmax_07_01 <- tmax_from_prism[,-1]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- create a multi-layer SpatRaster ---#\nprism_tmax_stack <- c(prism_tmax_0701_KS_sr, prism_tmax_0702_KS_sr)\n\n#--- extract tmax values ---#\ntmax_from_prism_stack <- terra::extract(prism_tmax_stack, KS_wells)\n\n#--- take a look ---#\nhead(tmax_from_prism_stack)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID PRISM_tmax_stable_4kmD2_20180701_bil PRISM_tmax_stable_4kmD2_20180702_bil\n1  1                               34.241                               30.544\n2  2                               29.288                               29.569\n3  3                               32.585                               29.866\n4  4                               30.104                               29.819\n5  5                               34.232                               30.481\n6  6                               35.168                               30.640\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax_by_county <- terra::extract(prism_tmax_0701_KS_sr, KS_county_sf)\n\nclass(tmax_by_county)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(tmax_by_county)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID PRISM_tmax_stable_4kmD2_20180701_bil\n1  1                               34.181\n2  1                               34.180\n3  1                               34.210\n4  1                               34.190\n5  1                               34.292\n6  1                               34.258\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- get mean tmax ---#\nmean_tmax <-\n  tmax_by_county %>%\n  group_by(ID) %>%\n  summarize(tmax = mean(PRISM_tmax_stable_4kmD2_20180701_bil))\n\n(\n  KS_county_sf <-\n    #--- back to sf ---#\n    KS_county_sf %>%\n    #--- define ID ---#\n    mutate(ID := seq_len(nrow(.))) %>%\n    #--- merge by ID ---#\n    left_join(., mean_tmax, by = \"ID\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 105 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -102.0517 ymin: 36.99302 xmax: -94.58841 ymax: 40.00316\nGeodetic CRS:  NAD83\nFirst 10 features:\n   STATEFP COUNTYFP COUNTYNS       AFFGEOID GEOID         NAME\n1       20      175 00485050 0500000US20175 20175       Seward\n2       20      027 00484983 0500000US20027 20027         Clay\n3       20      171 00485048 0500000US20171 20171        Scott\n4       20      047 00484993 0500000US20047 20047      Edwards\n5       20      147 00485037 0500000US20147 20147     Phillips\n6       20      149 00485038 0500000US20149 20149 Pottawatomie\n7       20      055 00485326 0500000US20055 20055       Finney\n8       20      167 00485046 0500000US20167 20167      Russell\n9       20      135 00485031 0500000US20135 20135         Ness\n10      20      093 00485011 0500000US20093 20093       Kearny\n              NAMELSAD STUSPS STATE_NAME LSAD      ALAND   AWATER ID     tmax\n1        Seward County     KS     Kansas   06 1656693304  1961444  1 34.47948\n2          Clay County     KS     Kansas   06 1671314413 26701337  2 34.51894\n3         Scott County     KS     Kansas   06 1858536838   306079  3 33.56413\n4       Edwards County     KS     Kansas   06 1610699245   206413  4 32.26368\n5      Phillips County     KS     Kansas   06 2294395636 22493383  5 32.57836\n6  Pottawatomie County     KS     Kansas   06 2177493041 54149843  6 35.67524\n7        Finney County     KS     Kansas   06 3372157854  1716371  7 33.96920\n8       Russell County     KS     Kansas   06 2295402858 34126776  8 33.37254\n9          Ness County     KS     Kansas   06 2783562234   667491  9 32.86275\n10       Kearny County     KS     Kansas   06 2254696661  1133601 10 33.40829\n                         geometry\n1  MULTIPOLYGON (((-101.0681 3...\n2  MULTIPOLYGON (((-97.3707 39...\n3  MULTIPOLYGON (((-101.1284 3...\n4  MULTIPOLYGON (((-99.56988 3...\n5  MULTIPOLYGON (((-99.62821 3...\n6  MULTIPOLYGON (((-96.72774 3...\n7  MULTIPOLYGON (((-101.103 37...\n8  MULTIPOLYGON (((-99.04234 3...\n9  MULTIPOLYGON (((-100.2477 3...\n10 MULTIPOLYGON (((-101.5419 3...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax_by_county <- \n  terra::extract(\n    prism_tmax_0701_KS_sr,\n    KS_county_sf,\n    fun = mean\n  )\nhead(tmax_by_county)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID PRISM_tmax_stable_4kmD2_20180701_bil\n1  1                             34.47948\n2  2                             34.51894\n3  3                             33.56413\n4  4                             32.26368\n5  5                             32.57836\n6  6                             35.67524\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# exactextractr::exact_extract(raster, polygons sf, include_cols = list of vars)\n\ntmax_by_county <- \n  exactextractr::exact_extract(\n    prism_tmax_0701_KS_sr,\n    KS_county_sf,\n    include_cols = \"COUNTYFP\",\n    progress = FALSE\n  )\n\n  tmax_by_county[1:2] %>% lapply(function(x) head(x))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n  COUNTYFP  value coverage_fraction\n1      175 34.222         0.1074141\n2      175 34.181         0.8066747\n3      175 34.180         0.8066615\n4      175 34.210         0.8066448\n5      175 34.190         0.8061629\n6      175 34.292         0.8054324\n\n[[2]]\n  COUNTYFP  value coverage_fraction\n1      027 33.847        0.03732148\n2      027 33.897        0.10592906\n3      027 34.010        0.10249268\n4      027 34.186        0.10018899\n5      027 34.293        0.10074520\n6      027 34.220        0.09701102\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax_combined <- tmax_by_county %>% \n  dplyr::bind_rows() %>% \n  tibble::as_tibble()\n```\n:::\n\n\n\n\n\n## `Stars` package\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  stars, # spatiotemporal data handling\n  sf, # vector data handling\n  tidyverse, # data wrangling\n  cubelyr, # handle raster data\n  mapview, # make maps\n  exactextractr, # fast raster data extraction\n  lubridate, # handle dates\n  prism # download PRISM data\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalling package into '/home/himakun/R/x86_64-pc-linux-gnu-library/4.4'\n(as 'lib' is unspecified)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\ncubelyr installed\n```\n\n\n:::\n:::",
    "supporting": [
      "terra-raster-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}