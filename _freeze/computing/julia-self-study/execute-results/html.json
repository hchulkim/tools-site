{
  "hash": "4dacef018874559df3c9d397089db424",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Julia self study\"\nsubtitle: \"Self studying Julia\"\nexecute:\n  freeze: auto\n---\n\n::: {#c09074b4 .cell execution_count=1}\n``` {.julia .cell-code}\nusing DataFrames\nusing CSV\nusing XLSX\n```\n:::\n\n\nMake a toy dataframe\n\n::: {#d404f46e .cell execution_count=2}\n``` {.julia .cell-code}\nfunction grades_2020()\n    name = [\"Sally\", \"Bob\", \"Alice\", \"Hank\"]\n    grade_2020 = [1, 5, 8.5, 4]\n    DataFrame(; name, grade_2020)\nend\ngrades_2020()\n\nfunction grades_2021()\n    name = [\"Sally\", \"Bob\", \"Alice\", \"Hank\", \"John\"]\n    grade_2021 = [3, 5, 8.5, 7, 10]\n    DataFrame(; name, grade_2021)\nend\ngrades_2021()\n```\n\n::: {.cell-output .cell-output-display execution_count=147}\n```{=html}\n<div><div style = \"float: left;\"><span>5×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2021</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">3.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">7.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n# Loading and writing files\n\n## CSV files\n\nWrite the dataframe into CSV file\n\n::: {#c1448c5c .cell execution_count=3}\n``` {.julia .cell-code}\nCSV.write(\"toy.csv\", grades_2020())\n```\n\n::: {.cell-output .cell-output-display execution_count=148}\n```\n\"toy.csv\"\n```\n:::\n:::\n\n\nRead in the CSV file\n\n::: {#a9613cb9 .cell execution_count=4}\n``` {.julia .cell-code}\ntoy = CSV.read(\"toy.csv\", DataFrame)\nfirst(toy, 5)\n```\n\n::: {.cell-output .cell-output-display execution_count=149}\n```{=html}\n<div><div style = \"float: left;\"><span>4×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2020</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String7\" style = \"text-align: left;\">String7</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Excel files\n\n::: {#5a77c20c .cell execution_count=5}\n``` {.julia .cell-code}\nfunction write_xlsx(name, df::DataFrame)\n    path = \"$name.xlsx\"\n    data = collect(eachcol(df))\n    cols = names(df)\n    write(path, data, cols)\nend\n\nfunction write_grades_xlsx()\n    path = \"grades\"\n    write_xlsx(path, grades_2020())\n    \"$path.xlsx\"\nend\n\npath = write_grades_xlsx()\nxf = readxlsx(path)\n```\n:::\n\n\n# DataFrames.jl\n\n## Filter and subset\n\n::: {#3c647159 .cell execution_count=6}\n``` {.julia .cell-code}\nequals_alice(name::String) = name == \"Alice\"\n\nfilter(:name => equals_alice, grades_2020())\n\nfilter(:name => n -> n == \"Alice\", grades_2020())\n\nfilter(:name => ==(\"Alice\"), grades_2020())\nfilter(:name => !=(\"Alice\"), grades_2020())\n```\n\n::: {.cell-output .cell-output-display execution_count=150}\n```{=html}\n<div><div style = \"float: left;\"><span>3×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2020</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#ecc73a7c .cell execution_count=7}\n``` {.julia .cell-code}\nfunction complex_filter(name, grade)::Bool\n    interesting_name = startswith(name, 'A') || startswith(name, 'B')\n    interesting_grade = 6 < grade\n    interesting_name && interesting_grade\nend\n\nfilter([:name, :grade_2020] => complex_filter, grades_2020())\n```\n\n::: {.cell-output .cell-output-display execution_count=151}\n```{=html}\n<div><div style = \"float: left;\"><span>1×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2020</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Select\n\n::: {#1ef8b93e .cell execution_count=8}\n``` {.julia .cell-code}\nfunction responses()\n    id = [1, 2]\n    q1 = [28, 61]\n    q2 = [:us, :fr]\n    q3 = [\"F\", \"B\"]\n    q4 = [\"B\", \"C\"]\n    q5 = [\"A\", \"E\"]\n    DataFrame(; id, q1, q2, q3, q4, q5)\nend\nresponses()\n```\n\n::: {.cell-output .cell-output-display execution_count=152}\n```{=html}\n<div><div style = \"float: left;\"><span>2×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">id</th><th style = \"text-align: left;\">q1</th><th style = \"text-align: left;\">q2</th><th style = \"text-align: left;\">q3</th><th style = \"text-align: left;\">q4</th><th style = \"text-align: left;\">q5</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Symbol\" style = \"text-align: left;\">Symbol</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">28</td><td style = \"text-align: left;\">us</td><td style = \"text-align: left;\">F</td><td style = \"text-align: left;\">B</td><td style = \"text-align: left;\">A</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">61</td><td style = \"text-align: left;\">fr</td><td style = \"text-align: left;\">B</td><td style = \"text-align: left;\">C</td><td style = \"text-align: left;\">E</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#49f85961 .cell execution_count=9}\n``` {.julia .cell-code}\nselect(responses(), :id, :q1)\n\n# regex\nselect(responses(), r\"^q\")\n\nselect(responses(), Not(:q5))\nselect(responses(), Not([:q4, :q5]))\nselect(responses(), :q5, Not(:q5))\n\n# renaming\nselect(responses(), 1 => \"participant\", :q1 => \"age\", :q2 => \"nationality\")\nrenames = (1 => \"participant\", :q1 => \"age\", :q2 => \"nationality\")\nselect(responses(), renames...)\n```\n\n::: {.cell-output .cell-output-display execution_count=153}\n```{=html}\n<div><div style = \"float: left;\"><span>2×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">participant</th><th style = \"text-align: left;\">age</th><th style = \"text-align: left;\">nationality</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Symbol\" style = \"text-align: left;\">Symbol</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">28</td><td style = \"text-align: left;\">us</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">61</td><td style = \"text-align: left;\">fr</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Left and right joins\n\n::: {#2306db18 .cell execution_count=10}\n``` {.julia .cell-code}\nleftjoin(grades_2020(), grades_2021(); on=:name)\n\nrightjoin(grades_2020(), grades_2021(); on=:name)\n```\n\n::: {.cell-output .cell-output-display execution_count=154}\n```{=html}\n<div><div style = \"float: left;\"><span>5×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2020</th><th style = \"text-align: left;\">grade_2021</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td><td style = \"text-align: right;\">3.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">7.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">John</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: right;\">10.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Transform variables\n\n::: {#1e516542 .cell execution_count=11}\n``` {.julia .cell-code}\nplus_one(grades) = grades .+ 1\ntransform(grades_2020(), :grade_2020 => plus_one)\n\ntransform(grades_2020(), :grade_2020 => plus_one => :grade_2020)\ntransform(grades_2020(), :grade_2020 => plus_one; renamecols=false)\n```\n\n::: {.cell-output .cell-output-display execution_count=155}\n```{=html}\n<div><div style = \"float: left;\"><span>4×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2020</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">2.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">6.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">9.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">5.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#bb9641b7 .cell execution_count=12}\n``` {.julia .cell-code}\nleftjoined = leftjoin(grades_2020(), grades_2021(); on=:name)\n\nfunction only_pass()\n    leftjoined = leftjoin(grades_2020(), grades_2021(); on=:name)\n    pass(A, B) = [5.5 < a || 5.5 < b for (a, b) in zip(A, B)]\n    leftjoined = transform(leftjoined, [:grade_2020, :grade_2021] => pass => :pass)\n    passed = subset(leftjoined, :pass; skipmissing=true)\n    return passed.name\nend\nonly_pass()\n```\n\n::: {.cell-output .cell-output-display execution_count=156}\n```\n2-element Vector{String}:\n \"Alice\"\n \"Hank\"\n```\n:::\n:::\n\n\n## Groupby and combine\n\n::: {#946c55b8 .cell execution_count=13}\n``` {.julia .cell-code}\nfunction all_grades()\n    df1 = grades_2020()\n    df1 = select(df1, :name, :grade_2020 => :grade)\n    df2 = grades_2021()\n    df2 = select(df2, :name, :grade_2021 => :grade)\n    rename_bob2(data_col) = replace.(data_col, \"Bob 2\" => \"Bob\")\n    df2 = transform(df2, :name => rename_bob2 => :name)\n    return vcat(df1, df2)\nend\nall_grades()\n```\n\n::: {.cell-output .cell-output-display execution_count=157}\n```{=html}\n<div><div style = \"float: left;\"><span>9×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">3.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">7.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#972117ce .cell execution_count=14}\n``` {.julia .cell-code}\ngroupby(all_grades(), :name)\n\nusing Statistics\n\ngdf = groupby(all_grades(), :name)\ncombine(gdf, :grade => mean)\n```\n\n::: {.cell-output .cell-output-display execution_count=158}\n```{=html}\n<div><div style = \"float: left;\"><span>5×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_mean</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">2.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">5.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#f83cfd94 .cell execution_count=15}\n``` {.julia .cell-code}\ngroup = [:A, :A, :B, :B]\nX = 1:4\nY = 5:8\ndf = DataFrame(; group, X, Y)\n\ngdf = groupby(df, :group)\ncombine(gdf, [:X, :Y] .=> mean; renamecols=false)\n```\n\n::: {.cell-output .cell-output-display execution_count=159}\n```{=html}\n<div><div style = \"float: left;\"><span>2×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">group</th><th style = \"text-align: left;\">X</th><th style = \"text-align: left;\">Y</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Symbol\" style = \"text-align: left;\">Symbol</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">A</td><td style = \"text-align: right;\">1.5</td><td style = \"text-align: right;\">5.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">B</td><td style = \"text-align: right;\">3.5</td><td style = \"text-align: right;\">7.5</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Missing values\n\n::: {#f1149ea4 .cell execution_count=16}\n``` {.julia .cell-code}\ndf_missing = DataFrame(;\n    name=[missing, \"Sally\", \"Alice\", \"Hank\"],\n    age=[17, missing, 20, 19],\n    grade_2020=[5.0, 1.0, missing, 4.0],\n)\n\ndropmissing(df_missing)\n\ndropmissing(df_missing, :name)\n\ndropmissing(df_missing, [:name, :age])\n```\n\n::: {.cell-output .cell-output-display execution_count=160}\n```{=html}\n<div><div style = \"float: left;\"><span>2×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">age</th><th style = \"text-align: left;\">grade_2020</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">20</td><td style = \"font-style: italic; text-align: right;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">19</td><td style = \"text-align: right;\">4.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#8ff30e87 .cell execution_count=17}\n``` {.julia .cell-code}\nfilter(:name => !ismissing, df_missing)\n\ncombine(df_missing, :grade_2020 => mean ∘ skipmissing )\n```\n\n::: {.cell-output .cell-output-display execution_count=161}\n```{=html}\n<div><div style = \"float: left;\"><span>1×1 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">grade_2020_mean_skipmissing</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">3.33333</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n# DataFramesMeta.jl\n\nSimilar syntax to `dplyr` in `R`.\n\n::: {#ecf8657f .cell execution_count=18}\n``` {.julia .cell-code}\nusing DataFramesMeta\n```\n:::\n\n\n## Select\n\n::: {#4c28f377 .cell execution_count=19}\n``` {.julia .cell-code}\ndf = all_grades()\n```\n\n::: {.cell-output .cell-output-display execution_count=163}\n```{=html}\n<div><div style = \"float: left;\"><span>9×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">3.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">7.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#a892f0ba .cell execution_count=20}\n``` {.julia .cell-code}\n@select df :name\n@select df :name :grade\n@select df $(Not(:grade))\n```\n\n::: {.cell-output .cell-output-display execution_count=164}\n```{=html}\n<div><div style = \"float: left;\"><span>9×1 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Sally</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Bob</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Alice</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Hank</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">John</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#63e56f84 .cell execution_count=21}\n``` {.julia .cell-code}\n@select df :grade_100 = :grade .* 10\n@rselect df :grade_100 = :grade * 10\n```\n\n::: {.cell-output .cell-output-display execution_count=165}\n```{=html}\n<div><div style = \"float: left;\"><span>9×1 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">grade_100</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">10.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">50.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">85.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">40.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">30.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">50.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">85.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: right;\">70.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: right;\">100.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Column transformation\n\n::: {#ac476fdf .cell execution_count=22}\n``` {.julia .cell-code}\n@rtransform df :grade_100 = :grade * 10\n```\n\n::: {.cell-output .cell-output-display execution_count=166}\n```{=html}\n<div><div style = \"float: left;\"><span>9×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade</th><th style = \"text-align: left;\">grade_100</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td><td style = \"text-align: right;\">10.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">50.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">85.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">40.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">30.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">50.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">85.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">7.0</td><td style = \"text-align: right;\">70.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td><td style = \"text-align: right;\">100.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#3d8f4194 .cell execution_count=23}\n``` {.julia .cell-code}\n@rtransform df :grade_100 = :grade * 10 :grade_5 = :grade / 2\n\n@rtransform df begin\n    :grade_100 = :grade * 10\n    :grade_5 = :grade / 2\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=167}\n```{=html}\n<div><div style = \"float: left;\"><span>9×4 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade</th><th style = \"text-align: left;\">grade_100</th><th style = \"text-align: left;\">grade_5</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td><td style = \"text-align: right;\">10.0</td><td style = \"text-align: right;\">0.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">50.0</td><td style = \"text-align: right;\">2.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">85.0</td><td style = \"text-align: right;\">4.25</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">40.0</td><td style = \"text-align: right;\">2.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">30.0</td><td style = \"text-align: right;\">1.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">50.0</td><td style = \"text-align: right;\">2.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">85.0</td><td style = \"text-align: right;\">4.25</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">7.0</td><td style = \"text-align: right;\">70.0</td><td style = \"text-align: right;\">3.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td><td style = \"text-align: right;\">100.0</td><td style = \"text-align: right;\">5.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#8bb8853e .cell execution_count=24}\n``` {.julia .cell-code}\nleftjoined = leftjoin(grades_2020(), grades_2021(); on=:name)\n@rtransform! leftjoined :grade_2021 = coalesce(:grade_2021, 5)\n\n@rtransform leftjoined :mean_grades = (:grade_2020 + :grade_2021) / 2\n```\n\n::: {.cell-output .cell-output-display execution_count=168}\n```{=html}\n<div><div style = \"float: left;\"><span>4×4 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2020</th><th style = \"text-align: left;\">grade_2021</th><th style = \"text-align: left;\">mean_grades</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">2.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">7.0</td><td style = \"text-align: right;\">5.5</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Row selection\n\n::: {#004b96f3 .cell execution_count=25}\n``` {.julia .cell-code}\n@rsubset df :grade > 7\n```\n\n::: {.cell-output .cell-output-display execution_count=169}\n```{=html}\n<div><div style = \"float: left;\"><span>3×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#41921d8a .cell execution_count=26}\n``` {.julia .cell-code}\n@subset df :grade .> mean(:grade)\n```\n\n::: {.cell-output .cell-output-display execution_count=170}\n```{=html}\n<div><div style = \"float: left;\"><span>4×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">7.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">John</td><td style = \"text-align: right;\">10.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#52440869 .cell execution_count=27}\n``` {.julia .cell-code}\n@rsubset df begin\n    :grade > 7\n    startswith(:name, \"A\")\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=171}\n```{=html}\n<div><div style = \"float: left;\"><span>2×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Row sorting\n\n::: {#6de8be0d .cell execution_count=28}\n``` {.julia .cell-code}\n@orderby leftjoined :grade_2021\n@orderby leftjoined -:grade_2021\n\n@orderby leftjoined begin\n    :grade_2021\n    :name\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=172}\n```{=html}\n<div><div style = \"float: left;\"><span>4×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">grade_2020</th><th style = \"text-align: left;\">grade_2021</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td><td style = \"text-align: right;\">3.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">7.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">8.5</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Data summaries\n\n::: {#b3fff359 .cell execution_count=29}\n``` {.julia .cell-code}\n@combine leftjoined :mean_grade_2020 = mean(:grade_2020)\n```\n\n::: {.cell-output .cell-output-display execution_count=173}\n```{=html}\n<div><div style = \"float: left;\"><span>1×1 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">mean_grade_2020</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">4.625</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#f36b64b4 .cell execution_count=30}\n``` {.julia .cell-code}\n@combine leftjoined begin\n    :mean_grade_2020 = mean(:grade_2020)\n    :mean_grade_2021 = mean(:grade_2021)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=174}\n```{=html}\n<div><div style = \"float: left;\"><span>1×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">mean_grade_2020</th><th style = \"text-align: left;\">mean_grade_2021</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">4.625</td><td style = \"text-align: right;\">5.875</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#12b66503 .cell execution_count=31}\n``` {.julia .cell-code}\ngdf = groupby(leftjoined, :name)\n@combine gdf begin\n    :mean_grade_2020 = mean(:grade_2020)\n    :mean_grade_2021 = mean(:grade_2021)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=175}\n```{=html}\n<div><div style = \"float: left;\"><span>4×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">mean_grade_2020</th><th style = \"text-align: left;\">mean_grade_2021</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td><td style = \"text-align: right;\">3.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">7.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Piping operations\n\n::: {#88362a08 .cell execution_count=32}\n``` {.julia .cell-code}\n@chain leftjoined begin\n    groupby(:name)\n    @combine :mean_grade_2020 = mean(:grade_2020)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=176}\n```{=html}\n<div><div style = \"float: left;\"><span>4×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">mean_grade_2020</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#0526e489 .cell execution_count=33}\n``` {.julia .cell-code}\n@chain leftjoined begin\n    groupby(:name)\n    @combine begin\n        :mean_grade_2020 = mean(:grade_2020)\n        :mean_grade_2021 = mean(:grade_2021)\n    end\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=177}\n```{=html}\n<div><div style = \"float: left;\"><span>4×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">mean_grade_2020</th><th style = \"text-align: left;\">mean_grade_2021</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Sally</td><td style = \"text-align: right;\">1.0</td><td style = \"text-align: right;\">3.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Bob</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">8.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">7.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Finale!\n\n::: {#c16565bc .cell execution_count=34}\n``` {.julia .cell-code}\n@chain leftjoined begin\n    @rtransform begin\n        :grade_2020 = :grade_2020 * 10\n        :grade_2021 = :grade_2021 * 10\n    end\n    groupby(:name)\n    @combine begin\n        :mean_grade_2020 = mean(:grade_2020)\n        :mean_grade_2021 = mean(:grade_2021)\n    end\n    @rtransform :mean_grades = (:mean_grade_2020 + :mean_grade_2021) / 2\n    @rsubset :mean_grades > 50\n    @orderby -:mean_grades\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=178}\n```{=html}\n<div><div style = \"float: left;\"><span>2×4 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">mean_grade_2020</th><th style = \"text-align: left;\">mean_grade_2021</th><th style = \"text-align: left;\">mean_grades</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Alice</td><td style = \"text-align: right;\">85.0</td><td style = \"text-align: right;\">85.0</td><td style = \"text-align: right;\">85.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Hank</td><td style = \"text-align: right;\">40.0</td><td style = \"text-align: right;\">70.0</td><td style = \"text-align: right;\">55.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n# Quant-econ\n\n## Geometric series\n\n::: {#3edb42c2 .cell execution_count=35}\n``` {.julia .cell-code}\n# using Pkg\n# Pkg.update()\nusing LinearAlgebra, Statistics\nusing Distributions, Plots, Random, LaTeXStrings, Symbolics\n\n```\n:::\n\n\n**Example: The Keynesian multiplier**\n\n$y_t = \\frac{1-b^{t+1}}{1-b}i \\Rightarrow \\frac{1}{1-b}i$.\n\n::: {#6516b86e .cell execution_count=36}\n``` {.julia .cell-code}\n# function that calculates a path of y\nfunction calculate_y(i, b, g, T, y_init)\n    y = zeros(T+1)\n    y[1] = i + b * y_init + g\n    for t in 2:(T+1)\n        y[t] = b * y[t-1] + i + g\n    end\n    return y\nend\n\n# Initial values\ni_0 = 0.3\ng_0 = 0.3\nb = 2 / 3\ny_init = 0\nT = 100\n\nplt = plot(0:T, calculate_y(i_0, b, g_0, T, y_init),\n            title = \"Path of Aggregate Output Over Time\",\n            ylim = (0.5, 1.9), xlabel = L\"t\", ylabel = L\"y_t\")\n\n# Output predicted by geometric series\nhline!([i_0 / (1-b) + g_0 / (1-b)], linestyle = :dash, seriestype = \"hline\", legend = false)\n```\n\n::: {.cell-output .cell-output-display execution_count=180}\n```{=html}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"672\" height=\"480\" viewBox=\"0 0 2688 1920\">\n<defs>\n  <clipPath id=\"clip760\">\n    <rect x=\"0\" y=\"0\" width=\"2688\" height=\"1920\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip760)\" d=\"M0 1920 L2688 1920 L2688 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip761\">\n    <rect x=\"537\" y=\"0\" width=\"1883\" height=\"1883\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip760)\" d=\"M225.816 1734.12 L2640.76 1734.12 L2640.76 127.792 L225.816 127.792  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip762\">\n    <rect x=\"225\" y=\"127\" width=\"2416\" height=\"1607\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"294.164,1734.12 294.164,127.792 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"863.725,1734.12 863.725,127.792 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1433.29,1734.12 1433.29,127.792 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2002.85,1734.12 2002.85,127.792 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2572.41,1734.12 2572.41,127.792 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.816,1619.38 2640.76,1619.38 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.816,1389.9 2640.76,1389.9 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.816,1160.43 2640.76,1160.43 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.816,930.955 2640.76,930.955 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.816,701.48 2640.76,701.48 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.816,472.005 2640.76,472.005 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.816,242.53 2640.76,242.53 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,1734.12 2640.76,1734.12 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"294.164,1734.12 294.164,1715.22 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"863.725,1734.12 863.725,1715.22 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1433.29,1734.12 1433.29,1715.22 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2002.85,1734.12 2002.85,1715.22 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2572.41,1734.12 2572.41,1715.22 \"/>\n<path clip-path=\"url(#clip760)\" d=\"M294.164 1767.34 Q290.553 1767.34 288.724 1770.9 Q286.918 1774.45 286.918 1781.58 Q286.918 1788.68 288.724 1792.25 Q290.553 1795.79 294.164 1795.79 Q297.798 1795.79 299.604 1792.25 Q301.432 1788.68 301.432 1781.58 Q301.432 1774.45 299.604 1770.9 Q297.798 1767.34 294.164 1767.34 M294.164 1763.64 Q299.974 1763.64 303.03 1768.24 Q306.108 1772.83 306.108 1781.58 Q306.108 1790.3 303.03 1794.91 Q299.974 1799.49 294.164 1799.49 Q288.354 1799.49 285.275 1794.91 Q282.219 1790.3 282.219 1781.58 Q282.219 1772.83 285.275 1768.24 Q288.354 1763.64 294.164 1763.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M842.996 1794.89 L859.315 1794.89 L859.315 1798.82 L837.371 1798.82 L837.371 1794.89 Q840.033 1792.13 844.616 1787.5 Q849.223 1782.85 850.403 1781.51 Q852.649 1778.98 853.528 1777.25 Q854.431 1775.49 854.431 1773.8 Q854.431 1771.04 852.487 1769.31 Q850.565 1767.57 847.464 1767.57 Q845.264 1767.57 842.811 1768.34 Q840.38 1769.1 837.602 1770.65 L837.602 1765.93 Q840.427 1764.79 842.88 1764.21 Q845.334 1763.64 847.371 1763.64 Q852.741 1763.64 855.936 1766.32 Q859.13 1769.01 859.13 1773.5 Q859.13 1775.63 858.32 1777.55 Q857.533 1779.45 855.426 1782.04 Q854.848 1782.71 851.746 1785.93 Q848.644 1789.12 842.996 1794.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M869.176 1764.26 L887.533 1764.26 L887.533 1768.2 L873.459 1768.2 L873.459 1776.67 Q874.477 1776.32 875.496 1776.16 Q876.514 1775.97 877.533 1775.97 Q883.32 1775.97 886.699 1779.15 Q890.079 1782.32 890.079 1787.73 Q890.079 1793.31 886.607 1796.41 Q883.135 1799.49 876.815 1799.49 Q874.639 1799.49 872.371 1799.12 Q870.125 1798.75 867.718 1798.01 L867.718 1793.31 Q869.801 1794.45 872.024 1795 Q874.246 1795.56 876.723 1795.56 Q880.727 1795.56 883.065 1793.45 Q885.403 1791.34 885.403 1787.73 Q885.403 1784.12 883.065 1782.02 Q880.727 1779.91 876.723 1779.91 Q874.848 1779.91 872.973 1780.33 Q871.121 1780.74 869.176 1781.62 L869.176 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1407.99 1764.26 L1426.34 1764.26 L1426.34 1768.2 L1412.27 1768.2 L1412.27 1776.67 Q1413.29 1776.32 1414.3 1776.16 Q1415.32 1775.97 1416.34 1775.97 Q1422.13 1775.97 1425.51 1779.15 Q1428.89 1782.32 1428.89 1787.73 Q1428.89 1793.31 1425.42 1796.41 Q1421.94 1799.49 1415.62 1799.49 Q1413.45 1799.49 1411.18 1799.12 Q1408.93 1798.75 1406.53 1798.01 L1406.53 1793.31 Q1408.61 1794.45 1410.83 1795 Q1413.05 1795.56 1415.53 1795.56 Q1419.54 1795.56 1421.87 1793.45 Q1424.21 1791.34 1424.21 1787.73 Q1424.21 1784.12 1421.87 1782.02 Q1419.54 1779.91 1415.53 1779.91 Q1413.66 1779.91 1411.78 1780.33 Q1409.93 1780.74 1407.99 1781.62 L1407.99 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1448.1 1767.34 Q1444.49 1767.34 1442.66 1770.9 Q1440.86 1774.45 1440.86 1781.58 Q1440.86 1788.68 1442.66 1792.25 Q1444.49 1795.79 1448.1 1795.79 Q1451.74 1795.79 1453.54 1792.25 Q1455.37 1788.68 1455.37 1781.58 Q1455.37 1774.45 1453.54 1770.9 Q1451.74 1767.34 1448.1 1767.34 M1448.1 1763.64 Q1453.91 1763.64 1456.97 1768.24 Q1460.05 1772.83 1460.05 1781.58 Q1460.05 1790.3 1456.97 1794.91 Q1453.91 1799.49 1448.1 1799.49 Q1442.29 1799.49 1439.21 1794.91 Q1436.16 1790.3 1436.16 1781.58 Q1436.16 1772.83 1439.21 1768.24 Q1442.29 1763.64 1448.1 1763.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1976.7 1764.26 L1998.92 1764.26 L1998.92 1766.25 L1986.38 1798.82 L1981.49 1798.82 L1993.3 1768.2 L1976.7 1768.2 L1976.7 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2008.09 1764.26 L2026.45 1764.26 L2026.45 1768.2 L2012.37 1768.2 L2012.37 1776.67 Q2013.39 1776.32 2014.41 1776.16 Q2015.43 1775.97 2016.45 1775.97 Q2022.23 1775.97 2025.61 1779.15 Q2028.99 1782.32 2028.99 1787.73 Q2028.99 1793.31 2025.52 1796.41 Q2022.05 1799.49 2015.73 1799.49 Q2013.55 1799.49 2011.28 1799.12 Q2009.04 1798.75 2006.63 1798.01 L2006.63 1793.31 Q2008.72 1794.45 2010.94 1795 Q2013.16 1795.56 2015.64 1795.56 Q2019.64 1795.56 2021.98 1793.45 Q2024.32 1791.34 2024.32 1787.73 Q2024.32 1784.12 2021.98 1782.02 Q2019.64 1779.91 2015.64 1779.91 Q2013.76 1779.91 2011.89 1780.33 Q2010.03 1780.74 2008.09 1781.62 L2008.09 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2532.02 1794.89 L2539.65 1794.89 L2539.65 1768.52 L2531.34 1770.19 L2531.34 1765.93 L2539.61 1764.26 L2544.28 1764.26 L2544.28 1794.89 L2551.92 1794.89 L2551.92 1798.82 L2532.02 1798.82 L2532.02 1794.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2571.37 1767.34 Q2567.76 1767.34 2565.93 1770.9 Q2564.12 1774.45 2564.12 1781.58 Q2564.12 1788.68 2565.93 1792.25 Q2567.76 1795.79 2571.37 1795.79 Q2575 1795.79 2576.81 1792.25 Q2578.64 1788.68 2578.64 1781.58 Q2578.64 1774.45 2576.81 1770.9 Q2575 1767.34 2571.37 1767.34 M2571.37 1763.64 Q2577.18 1763.64 2580.23 1768.24 Q2583.31 1772.83 2583.31 1781.58 Q2583.31 1790.3 2580.23 1794.91 Q2577.18 1799.49 2571.37 1799.49 Q2565.56 1799.49 2562.48 1794.91 Q2559.42 1790.3 2559.42 1781.58 Q2559.42 1772.83 2562.48 1768.24 Q2565.56 1763.64 2571.37 1763.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2601.53 1767.34 Q2597.92 1767.34 2596.09 1770.9 Q2594.28 1774.45 2594.28 1781.58 Q2594.28 1788.68 2596.09 1792.25 Q2597.92 1795.79 2601.53 1795.79 Q2605.16 1795.79 2606.97 1792.25 Q2608.8 1788.68 2608.8 1781.58 Q2608.8 1774.45 2606.97 1770.9 Q2605.16 1767.34 2601.53 1767.34 M2601.53 1763.64 Q2607.34 1763.64 2610.39 1768.24 Q2613.47 1772.83 2613.47 1781.58 Q2613.47 1790.3 2610.39 1794.91 Q2607.34 1799.49 2601.53 1799.49 Q2595.72 1799.49 2592.64 1794.91 Q2589.58 1790.3 2589.58 1781.58 Q2589.58 1772.83 2592.64 1768.24 Q2595.72 1763.64 2601.53 1763.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1441.76 1847.17 Q1441.76 1848.07 1441.34 1848.3 Q1440.92 1848.49 1439.76 1848.49 L1433.58 1848.49 L1428.68 1867.95 Q1428.3 1869.65 1428.3 1871.1 Q1428.3 1872.71 1428.78 1873.42 Q1429.29 1874.13 1430.36 1874.13 Q1432.45 1874.13 1434.7 1872.23 Q1436.99 1870.33 1438.92 1865.69 Q1439.18 1865.08 1439.31 1864.95 Q1439.47 1864.79 1439.89 1864.79 Q1440.69 1864.79 1440.69 1865.43 Q1440.69 1865.66 1440.24 1866.69 Q1439.82 1867.72 1438.89 1869.23 Q1437.99 1870.75 1436.8 1872.16 Q1435.64 1873.58 1433.87 1874.61 Q1432.1 1875.61 1430.2 1875.61 Q1427.52 1875.61 1425.82 1873.9 Q1424.14 1872.2 1424.14 1869.52 Q1424.14 1868.65 1424.82 1865.88 Q1425.49 1863.08 1429.16 1848.49 L1423.34 1848.49 Q1422.53 1848.49 1422.21 1848.46 Q1421.92 1848.43 1421.69 1848.27 Q1421.5 1848.07 1421.5 1847.69 Q1421.5 1847.08 1421.76 1846.82 Q1422.02 1846.53 1422.34 1846.5 Q1422.69 1846.43 1423.5 1846.43 L1429.68 1846.43 L1432.26 1835.97 Q1432.51 1834.93 1433.16 1834.36 Q1433.83 1833.74 1434.22 1833.68 Q1434.61 1833.58 1434.9 1833.58 Q1435.77 1833.58 1436.28 1834.07 Q1436.8 1834.52 1436.8 1835.35 Q1436.8 1835.8 1434.09 1846.43 L1439.89 1846.43 Q1440.63 1846.43 1440.92 1846.46 Q1441.24 1846.5 1441.5 1846.66 Q1441.76 1846.82 1441.76 1847.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,1734.12 225.816,127.792 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,1619.38 244.714,1619.38 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,1389.9 244.714,1389.9 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,1160.43 244.714,1160.43 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,930.955 244.714,930.955 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,701.48 244.714,701.48 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,472.005 244.714,472.005 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.816,242.53 244.714,242.53 \"/>\n<path clip-path=\"url(#clip760)\" d=\"M128.159 1605.18 Q124.548 1605.18 122.719 1608.74 Q120.913 1612.28 120.913 1619.41 Q120.913 1626.52 122.719 1630.09 Q124.548 1633.63 128.159 1633.63 Q131.793 1633.63 133.599 1630.09 Q135.427 1626.52 135.427 1619.41 Q135.427 1612.28 133.599 1608.74 Q131.793 1605.18 128.159 1605.18 M128.159 1601.47 Q133.969 1601.47 137.025 1606.08 Q140.103 1610.66 140.103 1619.41 Q140.103 1628.14 137.025 1632.75 Q133.969 1637.33 128.159 1637.33 Q122.349 1637.33 119.27 1632.75 Q116.214 1628.14 116.214 1619.41 Q116.214 1610.66 119.27 1606.08 Q122.349 1601.47 128.159 1601.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M148.321 1630.78 L153.205 1630.78 L153.205 1636.66 L148.321 1636.66 L148.321 1630.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M173.969 1617.52 Q170.821 1617.52 168.969 1619.67 Q167.14 1621.82 167.14 1625.57 Q167.14 1629.3 168.969 1631.47 Q170.821 1633.63 173.969 1633.63 Q177.117 1633.63 178.946 1631.47 Q180.797 1629.3 180.797 1625.57 Q180.797 1621.82 178.946 1619.67 Q177.117 1617.52 173.969 1617.52 M183.251 1602.86 L183.251 1607.12 Q181.492 1606.29 179.686 1605.85 Q177.904 1605.41 176.145 1605.41 Q171.515 1605.41 169.061 1608.53 Q166.631 1611.66 166.284 1617.98 Q167.649 1615.97 169.71 1614.9 Q171.77 1613.81 174.247 1613.81 Q179.455 1613.81 182.464 1616.98 Q185.496 1620.13 185.496 1625.57 Q185.496 1630.9 182.348 1634.11 Q179.2 1637.33 173.969 1637.33 Q167.973 1637.33 164.802 1632.75 Q161.631 1628.14 161.631 1619.41 Q161.631 1611.22 165.52 1606.36 Q169.409 1601.47 175.959 1601.47 Q177.719 1601.47 179.501 1601.82 Q181.307 1602.17 183.251 1602.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M128.413 1375.7 Q124.802 1375.7 122.974 1379.27 Q121.168 1382.81 121.168 1389.94 Q121.168 1397.05 122.974 1400.61 Q124.802 1404.15 128.413 1404.15 Q132.048 1404.15 133.853 1400.61 Q135.682 1397.05 135.682 1389.94 Q135.682 1382.81 133.853 1379.27 Q132.048 1375.7 128.413 1375.7 M128.413 1372 Q134.224 1372 137.279 1376.61 Q140.358 1381.19 140.358 1389.94 Q140.358 1398.67 137.279 1403.27 Q134.224 1407.86 128.413 1407.86 Q122.603 1407.86 119.525 1403.27 Q116.469 1398.67 116.469 1389.94 Q116.469 1381.19 119.525 1376.61 Q122.603 1372 128.413 1372 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M148.575 1401.3 L153.46 1401.3 L153.46 1407.18 L148.575 1407.18 L148.575 1401.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M173.645 1390.77 Q170.311 1390.77 168.39 1392.55 Q166.492 1394.34 166.492 1397.46 Q166.492 1400.59 168.39 1402.37 Q170.311 1404.15 173.645 1404.15 Q176.978 1404.15 178.899 1402.37 Q180.821 1400.56 180.821 1397.46 Q180.821 1394.34 178.899 1392.55 Q177.001 1390.77 173.645 1390.77 M168.969 1388.78 Q165.96 1388.04 164.27 1385.98 Q162.603 1383.92 162.603 1380.96 Q162.603 1376.81 165.543 1374.41 Q168.506 1372 173.645 1372 Q178.807 1372 181.746 1374.41 Q184.686 1376.81 184.686 1380.96 Q184.686 1383.92 182.996 1385.98 Q181.33 1388.04 178.344 1388.78 Q181.723 1389.57 183.598 1391.86 Q185.496 1394.15 185.496 1397.46 Q185.496 1402.49 182.418 1405.17 Q179.362 1407.86 173.645 1407.86 Q167.927 1407.86 164.848 1405.17 Q161.793 1402.49 161.793 1397.46 Q161.793 1394.15 163.691 1391.86 Q165.589 1389.57 168.969 1388.78 M167.256 1381.4 Q167.256 1384.08 168.922 1385.59 Q170.612 1387.09 173.645 1387.09 Q176.654 1387.09 178.344 1385.59 Q180.057 1384.08 180.057 1381.4 Q180.057 1378.71 178.344 1377.21 Q176.654 1375.7 173.645 1375.7 Q170.612 1375.7 168.922 1377.21 Q167.256 1378.71 167.256 1381.4 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M119.131 1173.77 L126.77 1173.77 L126.77 1147.41 L118.46 1149.08 L118.46 1144.82 L126.724 1143.15 L131.4 1143.15 L131.4 1173.77 L139.038 1173.77 L139.038 1177.71 L119.131 1177.71 L119.131 1173.77 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M148.483 1171.83 L153.367 1171.83 L153.367 1177.71 L148.483 1177.71 L148.483 1171.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M173.552 1146.23 Q169.941 1146.23 168.112 1149.79 Q166.307 1153.33 166.307 1160.46 Q166.307 1167.57 168.112 1171.14 Q169.941 1174.68 173.552 1174.68 Q177.186 1174.68 178.992 1171.14 Q180.821 1167.57 180.821 1160.46 Q180.821 1153.33 178.992 1149.79 Q177.186 1146.23 173.552 1146.23 M173.552 1142.52 Q179.362 1142.52 182.418 1147.13 Q185.496 1151.71 185.496 1160.46 Q185.496 1169.19 182.418 1173.8 Q179.362 1178.38 173.552 1178.38 Q167.742 1178.38 164.663 1173.8 Q161.608 1169.19 161.608 1160.46 Q161.608 1151.71 164.663 1147.13 Q167.742 1142.52 173.552 1142.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M120.728 944.299 L128.367 944.299 L128.367 917.934 L120.057 919.6 L120.057 915.341 L128.321 913.675 L132.997 913.675 L132.997 944.299 L140.636 944.299 L140.636 948.235 L120.728 948.235 L120.728 944.299 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M150.08 942.355 L154.964 942.355 L154.964 948.235 L150.08 948.235 L150.08 942.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M169.177 944.299 L185.496 944.299 L185.496 948.235 L163.552 948.235 L163.552 944.299 Q166.214 941.545 170.797 936.915 Q175.404 932.262 176.584 930.92 Q178.83 928.397 179.709 926.661 Q180.612 924.901 180.612 923.212 Q180.612 920.457 178.668 918.721 Q176.747 916.985 173.645 916.985 Q171.446 916.985 168.992 917.749 Q166.561 918.512 163.784 920.063 L163.784 915.341 Q166.608 914.207 169.061 913.628 Q171.515 913.05 173.552 913.05 Q178.922 913.05 182.117 915.735 Q185.311 918.42 185.311 922.911 Q185.311 925.04 184.501 926.962 Q183.714 928.86 181.608 931.452 Q181.029 932.124 177.927 935.341 Q174.825 938.536 169.177 944.299 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M118.645 714.824 L126.284 714.824 L126.284 688.459 L117.974 690.125 L117.974 685.866 L126.238 684.2 L130.913 684.2 L130.913 714.824 L138.552 714.824 L138.552 718.76 L118.645 718.76 L118.645 714.824 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M147.997 712.88 L152.881 712.88 L152.881 718.76 L147.997 718.76 L147.997 712.88 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M175.913 688.274 L164.108 706.723 L175.913 706.723 L175.913 688.274 M174.686 684.2 L180.566 684.2 L180.566 706.723 L185.496 706.723 L185.496 710.611 L180.566 710.611 L180.566 718.76 L175.913 718.76 L175.913 710.611 L160.311 710.611 L160.311 706.098 L174.686 684.2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M118.969 485.349 L126.608 485.349 L126.608 458.984 L118.298 460.65 L118.298 456.391 L126.562 454.725 L131.238 454.725 L131.238 485.349 L138.876 485.349 L138.876 489.285 L118.969 489.285 L118.969 485.349 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M148.321 483.405 L153.205 483.405 L153.205 489.285 L148.321 489.285 L148.321 483.405 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M173.969 470.141 Q170.821 470.141 168.969 472.294 Q167.14 474.447 167.14 478.197 Q167.14 481.924 168.969 484.099 Q170.821 486.252 173.969 486.252 Q177.117 486.252 178.946 484.099 Q180.797 481.924 180.797 478.197 Q180.797 474.447 178.946 472.294 Q177.117 470.141 173.969 470.141 M183.251 455.488 L183.251 459.748 Q181.492 458.914 179.686 458.475 Q177.904 458.035 176.145 458.035 Q171.515 458.035 169.061 461.16 Q166.631 464.285 166.284 470.604 Q167.649 468.59 169.71 467.525 Q171.77 466.437 174.247 466.437 Q179.455 466.437 182.464 469.609 Q185.496 472.757 185.496 478.197 Q185.496 483.521 182.348 486.738 Q179.2 489.956 173.969 489.956 Q167.973 489.956 164.802 485.373 Q161.631 480.766 161.631 472.039 Q161.631 463.845 165.52 458.984 Q169.409 454.1 175.959 454.1 Q177.719 454.1 179.501 454.447 Q181.307 454.794 183.251 455.488 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M119.224 255.874 L126.863 255.874 L126.863 229.509 L118.552 231.176 L118.552 226.916 L126.816 225.25 L131.492 225.25 L131.492 255.874 L139.131 255.874 L139.131 259.81 L119.224 259.81 L119.224 255.874 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M148.575 253.93 L153.46 253.93 L153.46 259.81 L148.575 259.81 L148.575 253.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M173.645 243.398 Q170.311 243.398 168.39 245.18 Q166.492 246.962 166.492 250.087 Q166.492 253.212 168.39 254.995 Q170.311 256.777 173.645 256.777 Q176.978 256.777 178.899 254.995 Q180.821 253.189 180.821 250.087 Q180.821 246.962 178.899 245.18 Q177.001 243.398 173.645 243.398 M168.969 241.407 Q165.96 240.666 164.27 238.606 Q162.603 236.546 162.603 233.583 Q162.603 229.439 165.543 227.032 Q168.506 224.625 173.645 224.625 Q178.807 224.625 181.746 227.032 Q184.686 229.439 184.686 233.583 Q184.686 236.546 182.996 238.606 Q181.33 240.666 178.344 241.407 Q181.723 242.194 183.598 244.486 Q185.496 246.777 185.496 250.087 Q185.496 255.111 182.418 257.796 Q179.362 260.481 173.645 260.481 Q167.927 260.481 164.848 257.796 Q161.793 255.111 161.793 250.087 Q161.793 246.777 163.691 244.486 Q165.589 242.194 168.969 241.407 M167.256 234.023 Q167.256 236.708 168.922 238.213 Q170.612 239.717 173.645 239.717 Q176.654 239.717 178.344 238.213 Q180.057 236.708 180.057 234.023 Q180.057 231.338 178.344 229.833 Q176.654 228.328 173.645 228.328 Q170.612 228.328 168.922 229.833 Q167.256 231.338 167.256 234.023 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M19.6375 929.647 Q20.0884 929.647 21.1511 929.937 L46.3361 936.249 Q51.9399 937.634 55.8691 942.143 Q59.7982 946.619 59.7982 951.708 Q59.7982 954.767 58.1557 956.732 Q56.5454 958.696 54.0655 958.696 Q51.8755 958.696 50.8127 957.537 Q49.7822 956.378 49.7822 954.993 Q49.7822 954.542 49.911 954.059 Q50.0398 953.576 50.5873 953.06 Q51.1348 952.545 52.0688 952.545 Q53.5824 952.545 54.7741 953.866 Q55.3216 954.51 55.4504 955.122 Q55.5792 955.701 55.5792 956.7 Q56.481 956.313 57.0929 955.605 Q57.7048 954.896 57.9302 954.091 Q58.1879 953.286 58.2523 952.771 Q58.3489 952.223 58.3489 951.708 Q58.3489 947.585 54.1944 944.429 Q52.9383 943.495 51.6823 942.819 Q50.4585 942.11 48.9448 941.595 Q47.4633 941.08 46.6582 940.854 Q45.853 940.597 44.0173 940.146 Q47.0125 943.141 47.0125 946.812 Q47.0125 948.358 46.5938 949.743 Q46.1751 951.096 45.3055 952.287 Q44.4038 953.479 42.8257 954.188 Q41.2476 954.864 39.1542 954.864 Q36.932 954.864 33.9047 953.994 Q30.8773 953.125 25.3057 951.031 Q22.1817 949.904 20.6681 949.904 Q19.9273 949.904 19.4764 950.065 Q18.9934 950.226 18.8323 950.548 Q18.6391 950.87 18.6069 951.064 Q18.5747 951.225 18.5747 951.547 Q18.5747 953.447 20.507 955.218 Q22.4394 956.99 26.755 958.213 Q27.5601 958.471 27.7533 958.632 Q27.9466 958.793 27.9466 959.276 Q27.9144 960.081 27.2703 960.081 Q27.0126 960.081 26.0142 959.791 Q24.9836 959.502 23.47 958.825 Q21.9241 958.117 20.5392 957.151 Q19.1222 956.184 18.1238 954.671 Q17.1254 953.125 17.1254 951.354 Q17.1254 948.938 18.7035 947.457 Q20.2494 945.943 22.536 945.943 Q23.47 945.943 24.3073 946.201 Q25.1125 946.426 27.2703 947.263 Q35.9658 950.645 40.217 950.645 Q41.2476 950.645 42.1172 950.484 Q42.9545 950.291 43.7919 949.872 Q44.597 949.453 45.0801 948.616 Q45.531 947.746 45.531 946.555 Q45.531 945.041 44.8225 943.624 Q44.0817 942.175 43.0833 941.273 Q42.085 940.339 41.2476 939.792 Q40.378 939.212 39.9272 939.083 L28.0754 936.12 L22.7936 934.8 Q19.9273 934.188 19.2188 933.898 Q18.5425 933.511 18.1882 932.835 Q17.8339 932.159 17.8339 931.579 Q17.8339 930.774 18.317 930.226 Q18.8001 929.647 19.6375 929.647 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M57.4657 908.726 Q58.097 908.726 58.2548 909.019 Q58.39 909.312 58.39 910.124 L58.39 914.452 L72.0067 917.879 Q73.2015 918.149 74.216 918.149 Q75.3432 918.149 75.8392 917.811 Q76.3352 917.451 76.3352 916.707 Q76.3352 915.241 75.0051 913.663 Q73.6749 912.063 70.4286 910.71 Q70.0003 910.53 69.9101 910.439 Q69.7974 910.327 69.7974 910.034 Q69.7974 909.47 70.2482 909.47 Q70.4061 909.47 71.1275 909.786 Q71.8489 910.079 72.9085 910.732 Q73.968 911.364 74.96 912.198 Q75.9519 913.009 76.6733 914.249 Q77.3722 915.489 77.3722 916.819 Q77.3722 918.691 76.1773 919.885 Q74.9825 921.058 73.1113 921.058 Q72.5027 921.058 70.5639 920.584 Q68.6025 920.111 58.39 917.541 L58.39 921.621 Q58.39 922.185 58.3675 922.41 Q58.345 922.613 58.2322 922.771 Q58.097 922.906 57.8264 922.906 Q57.3981 922.906 57.2178 922.726 Q57.0149 922.546 56.9923 922.32 Q56.9472 922.072 56.9472 921.509 L56.9472 917.18 L49.6204 915.377 Q48.899 915.196 48.4932 914.745 Q48.0648 914.272 48.0198 914.001 Q47.9521 913.731 47.9521 913.528 Q47.9521 912.919 48.2903 912.559 Q48.6059 912.198 49.1921 912.198 Q49.5077 912.198 56.9472 914.092 L56.9472 910.034 Q56.9472 909.515 56.9698 909.312 Q56.9923 909.087 57.105 908.906 Q57.2178 908.726 57.4657 908.726 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M689.095 18.8205 L689.095 41.5461 L699.384 41.5461 Q705.096 41.5461 708.215 38.5889 Q711.334 35.6318 711.334 30.163 Q711.334 24.7348 708.215 21.7777 Q705.096 18.8205 699.384 18.8205 L689.095 18.8205 M680.912 12.096 L699.384 12.096 Q709.552 12.096 714.737 16.714 Q719.962 21.2916 719.962 30.163 Q719.962 39.1155 714.737 43.6931 Q709.552 48.2706 699.384 48.2706 L689.095 48.2706 L689.095 72.576 L680.912 72.576 L680.912 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M747.509 49.7694 Q738.475 49.7694 734.991 51.8354 Q731.508 53.9013 731.508 58.8839 Q731.508 62.8538 734.1 65.2034 Q736.733 67.5124 741.23 67.5124 Q747.428 67.5124 751.154 63.1374 Q754.922 58.7219 754.922 51.4303 L754.922 49.7694 L747.509 49.7694 M762.375 46.6907 L762.375 72.576 L754.922 72.576 L754.922 65.6895 Q752.37 69.8214 748.562 71.8063 Q744.754 73.7508 739.245 73.7508 Q732.277 73.7508 728.145 69.8619 Q724.054 65.9325 724.054 59.3701 Q724.054 51.7138 729.158 47.825 Q734.303 43.9361 744.47 43.9361 L754.922 43.9361 L754.922 43.2069 Q754.922 38.0623 751.519 35.2672 Q748.157 32.4315 742.04 32.4315 Q738.151 32.4315 734.465 33.3632 Q730.778 34.295 727.376 36.1584 L727.376 29.2718 Q731.467 27.692 735.315 26.9223 Q739.164 26.1121 742.81 26.1121 Q752.653 26.1121 757.514 31.2163 Q762.375 36.3204 762.375 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M785.101 14.324 L785.101 27.2059 L800.454 27.2059 L800.454 32.9987 L785.101 32.9987 L785.101 57.6282 Q785.101 63.1779 786.6 64.7578 Q788.139 66.3376 792.798 66.3376 L800.454 66.3376 L800.454 72.576 L792.798 72.576 Q784.169 72.576 780.888 69.3758 Q777.607 66.1351 777.607 57.6282 L777.607 32.9987 L772.138 32.9987 L772.138 27.2059 L777.607 27.2059 L777.607 14.324 L785.101 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M847.971 45.1919 L847.971 72.576 L840.517 72.576 L840.517 45.4349 Q840.517 38.994 838.006 35.7938 Q835.494 32.5936 830.471 32.5936 Q824.435 32.5936 820.952 36.4419 Q817.468 40.2903 817.468 46.9338 L817.468 72.576 L809.974 72.576 L809.974 9.54393 L817.468 9.54393 L817.468 34.2544 Q820.141 30.163 823.747 28.1376 Q827.392 26.1121 832.132 26.1121 Q839.95 26.1121 843.961 30.9732 Q847.971 35.7938 847.971 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M906.79 32.4315 Q900.795 32.4315 897.311 37.1306 Q893.827 41.7891 893.827 49.9314 Q893.827 58.0738 897.271 62.7728 Q900.754 67.4314 906.79 67.4314 Q912.745 67.4314 916.229 62.7323 Q919.713 58.0333 919.713 49.9314 Q919.713 41.8701 916.229 37.1711 Q912.745 32.4315 906.79 32.4315 M906.79 26.1121 Q916.512 26.1121 922.062 32.4315 Q927.612 38.7509 927.612 49.9314 Q927.612 61.0714 922.062 67.4314 Q916.512 73.7508 906.79 73.7508 Q897.027 73.7508 891.478 67.4314 Q885.969 61.0714 885.969 49.9314 Q885.969 38.7509 891.478 32.4315 Q897.027 26.1121 906.79 26.1121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M962.936 9.54393 L962.936 15.7418 L955.806 15.7418 Q951.796 15.7418 950.216 17.3622 Q948.677 18.9825 948.677 23.1955 L948.677 27.2059 L960.951 27.2059 L960.951 32.9987 L948.677 32.9987 L948.677 72.576 L941.182 72.576 L941.182 32.9987 L934.053 32.9987 L934.053 27.2059 L941.182 27.2059 L941.182 24.0462 Q941.182 16.471 944.707 13.0277 Q948.231 9.54393 955.887 9.54393 L962.936 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1016.08 20.1573 L1004.98 50.2555 L1027.22 50.2555 L1016.08 20.1573 M1011.47 12.096 L1020.74 12.096 L1043.79 72.576 L1035.28 72.576 L1029.78 57.061 L1002.51 57.061 L997.004 72.576 L988.375 72.576 L1011.47 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1082.15 49.3643 Q1082.15 41.2625 1078.79 36.8065 Q1075.47 32.3505 1069.43 32.3505 Q1063.44 32.3505 1060.08 36.8065 Q1056.75 41.2625 1056.75 49.3643 Q1056.75 57.4256 1060.08 61.8816 Q1063.44 66.3376 1069.43 66.3376 Q1075.47 66.3376 1078.79 61.8816 Q1082.15 57.4256 1082.15 49.3643 M1089.61 66.9452 Q1089.61 78.5308 1084.46 84.1616 Q1079.32 89.8329 1068.7 89.8329 Q1064.78 89.8329 1061.29 89.2252 Q1057.81 88.6581 1054.53 87.4428 L1054.53 80.1917 Q1057.81 81.9741 1061.01 82.8248 Q1064.21 83.6755 1067.53 83.6755 Q1074.86 83.6755 1078.51 79.8271 Q1082.15 76.0193 1082.15 68.282 L1082.15 64.5957 Q1079.84 68.6061 1076.24 70.5911 Q1072.63 72.576 1067.61 72.576 Q1059.27 72.576 1054.16 66.2161 Q1049.06 59.8562 1049.06 49.3643 Q1049.06 38.832 1054.16 32.472 Q1059.27 26.1121 1067.61 26.1121 Q1072.63 26.1121 1076.24 28.0971 Q1079.84 30.082 1082.15 34.0924 L1082.15 27.2059 L1089.61 27.2059 L1089.61 66.9452 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1134.82 49.3643 Q1134.82 41.2625 1131.45 36.8065 Q1128.13 32.3505 1122.1 32.3505 Q1116.1 32.3505 1112.74 36.8065 Q1109.42 41.2625 1109.42 49.3643 Q1109.42 57.4256 1112.74 61.8816 Q1116.1 66.3376 1122.1 66.3376 Q1128.13 66.3376 1131.45 61.8816 Q1134.82 57.4256 1134.82 49.3643 M1142.27 66.9452 Q1142.27 78.5308 1137.12 84.1616 Q1131.98 89.8329 1121.37 89.8329 Q1117.44 89.8329 1113.95 89.2252 Q1110.47 88.6581 1107.19 87.4428 L1107.19 80.1917 Q1110.47 81.9741 1113.67 82.8248 Q1116.87 83.6755 1120.19 83.6755 Q1127.52 83.6755 1131.17 79.8271 Q1134.82 76.0193 1134.82 68.282 L1134.82 64.5957 Q1132.51 68.6061 1128.9 70.5911 Q1125.3 72.576 1120.27 72.576 Q1111.93 72.576 1106.82 66.2161 Q1101.72 59.8562 1101.72 49.3643 Q1101.72 38.832 1106.82 32.472 Q1111.93 26.1121 1120.27 26.1121 Q1125.3 26.1121 1128.9 28.0971 Q1132.51 30.082 1134.82 34.0924 L1134.82 27.2059 L1142.27 27.2059 L1142.27 66.9452 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1183.91 34.1734 Q1182.66 33.4443 1181.16 33.1202 Q1179.7 32.7556 1177.92 32.7556 Q1171.6 32.7556 1168.2 36.8875 Q1164.83 40.9789 1164.83 48.6757 L1164.83 72.576 L1157.34 72.576 L1157.34 27.2059 L1164.83 27.2059 L1164.83 34.2544 Q1167.18 30.1225 1170.95 28.1376 Q1174.72 26.1121 1180.1 26.1121 Q1180.87 26.1121 1181.81 26.2337 Q1182.74 26.3147 1183.87 26.5172 L1183.91 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1228.72 48.0275 L1228.72 51.6733 L1194.44 51.6733 Q1194.93 59.3701 1199.06 63.421 Q1203.24 67.4314 1210.65 67.4314 Q1214.94 67.4314 1218.95 66.3781 Q1223 65.3249 1226.97 63.2184 L1226.97 70.267 Q1222.96 71.9684 1218.75 72.8596 Q1214.54 73.7508 1210.2 73.7508 Q1199.35 73.7508 1192.99 67.4314 Q1186.67 61.1119 1186.67 50.3365 Q1186.67 39.1965 1192.66 32.6746 Q1198.7 26.1121 1208.91 26.1121 Q1218.06 26.1121 1223.37 32.0264 Q1228.72 37.9003 1228.72 48.0275 M1221.26 45.84 Q1221.18 39.7232 1217.82 36.0774 Q1214.5 32.4315 1208.99 32.4315 Q1202.75 32.4315 1198.98 35.9558 Q1195.26 39.4801 1194.69 45.8805 L1221.26 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1270.8 49.3643 Q1270.8 41.2625 1267.44 36.8065 Q1264.12 32.3505 1258.08 32.3505 Q1252.09 32.3505 1248.73 36.8065 Q1245.41 41.2625 1245.41 49.3643 Q1245.41 57.4256 1248.73 61.8816 Q1252.09 66.3376 1258.08 66.3376 Q1264.12 66.3376 1267.44 61.8816 Q1270.8 57.4256 1270.8 49.3643 M1278.26 66.9452 Q1278.26 78.5308 1273.11 84.1616 Q1267.97 89.8329 1257.36 89.8329 Q1253.43 89.8329 1249.94 89.2252 Q1246.46 88.6581 1243.18 87.4428 L1243.18 80.1917 Q1246.46 81.9741 1249.66 82.8248 Q1252.86 83.6755 1256.18 83.6755 Q1263.51 83.6755 1267.16 79.8271 Q1270.8 76.0193 1270.8 68.282 L1270.8 64.5957 Q1268.5 68.6061 1264.89 70.5911 Q1261.28 72.576 1256.26 72.576 Q1247.92 72.576 1242.81 66.2161 Q1237.71 59.8562 1237.71 49.3643 Q1237.71 38.832 1242.81 32.472 Q1247.92 26.1121 1256.26 26.1121 Q1261.28 26.1121 1264.89 28.0971 Q1268.5 30.082 1270.8 34.0924 L1270.8 27.2059 L1278.26 27.2059 L1278.26 66.9452 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1314.23 49.7694 Q1305.2 49.7694 1301.71 51.8354 Q1298.23 53.9013 1298.23 58.8839 Q1298.23 62.8538 1300.82 65.2034 Q1303.45 67.5124 1307.95 67.5124 Q1314.15 67.5124 1317.88 63.1374 Q1321.64 58.7219 1321.64 51.4303 L1321.64 49.7694 L1314.23 49.7694 M1329.1 46.6907 L1329.1 72.576 L1321.64 72.576 L1321.64 65.6895 Q1319.09 69.8214 1315.28 71.8063 Q1311.48 73.7508 1305.97 73.7508 Q1299 73.7508 1294.87 69.8619 Q1290.78 65.9325 1290.78 59.3701 Q1290.78 51.7138 1295.88 47.825 Q1301.02 43.9361 1311.19 43.9361 L1321.64 43.9361 L1321.64 43.2069 Q1321.64 38.0623 1318.24 35.2672 Q1314.88 32.4315 1308.76 32.4315 Q1304.87 32.4315 1301.19 33.3632 Q1297.5 34.295 1294.1 36.1584 L1294.1 29.2718 Q1298.19 27.692 1302.04 26.9223 Q1305.89 26.1121 1309.53 26.1121 Q1319.37 26.1121 1324.24 31.2163 Q1329.1 36.3204 1329.1 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1351.82 14.324 L1351.82 27.2059 L1367.18 27.2059 L1367.18 32.9987 L1351.82 32.9987 L1351.82 57.6282 Q1351.82 63.1779 1353.32 64.7578 Q1354.86 66.3376 1359.52 66.3376 L1367.18 66.3376 L1367.18 72.576 L1359.52 72.576 Q1350.89 72.576 1347.61 69.3758 Q1344.33 66.1351 1344.33 57.6282 L1344.33 32.9987 L1338.86 32.9987 L1338.86 27.2059 L1344.33 27.2059 L1344.33 14.324 L1351.82 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1415.79 48.0275 L1415.79 51.6733 L1381.52 51.6733 Q1382 59.3701 1386.13 63.421 Q1390.31 67.4314 1397.72 67.4314 Q1402.01 67.4314 1406.02 66.3781 Q1410.07 65.3249 1414.04 63.2184 L1414.04 70.267 Q1410.03 71.9684 1405.82 72.8596 Q1401.61 73.7508 1397.27 73.7508 Q1386.42 73.7508 1380.06 67.4314 Q1373.74 61.1119 1373.74 50.3365 Q1373.74 39.1965 1379.73 32.6746 Q1385.77 26.1121 1395.98 26.1121 Q1405.13 26.1121 1410.44 32.0264 Q1415.79 37.9003 1415.79 48.0275 M1408.33 45.84 Q1408.25 39.7232 1404.89 36.0774 Q1401.57 32.4315 1396.06 32.4315 Q1389.82 32.4315 1386.05 35.9558 Q1382.33 39.4801 1381.76 45.8805 L1408.33 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1479.26 17.6457 Q1470.35 17.6457 1465.09 24.2892 Q1459.86 30.9327 1459.86 42.3968 Q1459.86 53.8203 1465.09 60.4638 Q1470.35 67.1073 1479.26 67.1073 Q1488.18 67.1073 1493.36 60.4638 Q1498.59 53.8203 1498.59 42.3968 Q1498.59 30.9327 1493.36 24.2892 Q1488.18 17.6457 1479.26 17.6457 M1479.26 11.0023 Q1491.98 11.0023 1499.6 19.5497 Q1507.22 28.0566 1507.22 42.3968 Q1507.22 56.6965 1499.6 65.2439 Q1491.98 73.7508 1479.26 73.7508 Q1466.5 73.7508 1458.85 65.2439 Q1451.23 56.737 1451.23 42.3968 Q1451.23 28.0566 1458.85 19.5497 Q1466.5 11.0023 1479.26 11.0023 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1518.92 54.671 L1518.92 27.2059 L1526.38 27.2059 L1526.38 54.3874 Q1526.38 60.8284 1528.89 64.0691 Q1531.4 67.2693 1536.42 67.2693 Q1542.46 67.2693 1545.94 63.421 Q1549.47 59.5726 1549.47 52.9291 L1549.47 27.2059 L1556.92 27.2059 L1556.92 72.576 L1549.47 72.576 L1549.47 65.6084 Q1546.75 69.7404 1543.15 71.7658 Q1539.58 73.7508 1534.84 73.7508 Q1527.02 73.7508 1522.97 68.8897 Q1518.92 64.0286 1518.92 54.671 M1537.68 26.1121 L1537.68 26.1121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1579.65 14.324 L1579.65 27.2059 L1595 27.2059 L1595 32.9987 L1579.65 32.9987 L1579.65 57.6282 Q1579.65 63.1779 1581.14 64.7578 Q1582.68 66.3376 1587.34 66.3376 L1595 66.3376 L1595 72.576 L1587.34 72.576 Q1578.71 72.576 1575.43 69.3758 Q1572.15 66.1351 1572.15 57.6282 L1572.15 32.9987 L1566.68 32.9987 L1566.68 27.2059 L1572.15 27.2059 L1572.15 14.324 L1579.65 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1612.01 65.7705 L1612.01 89.8329 L1604.52 89.8329 L1604.52 27.2059 L1612.01 27.2059 L1612.01 34.0924 Q1614.36 30.0415 1617.93 28.0971 Q1621.53 26.1121 1626.51 26.1121 Q1634.78 26.1121 1639.92 32.6746 Q1645.11 39.2371 1645.11 49.9314 Q1645.11 60.6258 1639.92 67.1883 Q1634.78 73.7508 1626.51 73.7508 Q1621.53 73.7508 1617.93 71.8063 Q1614.36 69.8214 1612.01 65.7705 M1637.37 49.9314 Q1637.37 41.7081 1633.97 37.0496 Q1630.61 32.3505 1624.69 32.3505 Q1618.78 32.3505 1615.37 37.0496 Q1612.01 41.7081 1612.01 49.9314 Q1612.01 58.1548 1615.37 62.8538 Q1618.78 67.5124 1624.69 67.5124 Q1630.61 67.5124 1633.97 62.8538 Q1637.37 58.1548 1637.37 49.9314 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1656.69 54.671 L1656.69 27.2059 L1664.15 27.2059 L1664.15 54.3874 Q1664.15 60.8284 1666.66 64.0691 Q1669.17 67.2693 1674.19 67.2693 Q1680.23 67.2693 1683.71 63.421 Q1687.24 59.5726 1687.24 52.9291 L1687.24 27.2059 L1694.69 27.2059 L1694.69 72.576 L1687.24 72.576 L1687.24 65.6084 Q1684.52 69.7404 1680.92 71.7658 Q1677.35 73.7508 1672.61 73.7508 Q1664.8 73.7508 1660.74 68.8897 Q1656.69 64.0286 1656.69 54.671 M1675.45 26.1121 L1675.45 26.1121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1717.42 14.324 L1717.42 27.2059 L1732.77 27.2059 L1732.77 32.9987 L1717.42 32.9987 L1717.42 57.6282 Q1717.42 63.1779 1718.92 64.7578 Q1720.45 66.3376 1725.11 66.3376 L1732.77 66.3376 L1732.77 72.576 L1725.11 72.576 Q1716.48 72.576 1713.2 69.3758 Q1709.92 66.1351 1709.92 57.6282 L1709.92 32.9987 L1704.45 32.9987 L1704.45 27.2059 L1709.92 27.2059 L1709.92 14.324 L1717.42 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1793.82 17.6457 Q1784.9 17.6457 1779.64 24.2892 Q1774.41 30.9327 1774.41 42.3968 Q1774.41 53.8203 1779.64 60.4638 Q1784.9 67.1073 1793.82 67.1073 Q1802.73 67.1073 1807.91 60.4638 Q1813.14 53.8203 1813.14 42.3968 Q1813.14 30.9327 1807.91 24.2892 Q1802.73 17.6457 1793.82 17.6457 M1793.82 11.0023 Q1806.54 11.0023 1814.15 19.5497 Q1821.77 28.0566 1821.77 42.3968 Q1821.77 56.6965 1814.15 65.2439 Q1806.54 73.7508 1793.82 73.7508 Q1781.06 73.7508 1773.4 65.2439 Q1765.78 56.737 1765.78 42.3968 Q1765.78 28.0566 1773.4 19.5497 Q1781.06 11.0023 1793.82 11.0023 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1828.9 27.2059 L1836.8 27.2059 L1850.97 65.2844 L1865.15 27.2059 L1873.05 27.2059 L1856.04 72.576 L1845.91 72.576 L1828.9 27.2059 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1922.15 48.0275 L1922.15 51.6733 L1887.88 51.6733 Q1888.36 59.3701 1892.5 63.421 Q1896.67 67.4314 1904.08 67.4314 Q1908.38 67.4314 1912.39 66.3781 Q1916.44 65.3249 1920.41 63.2184 L1920.41 70.267 Q1916.4 71.9684 1912.18 72.8596 Q1907.97 73.7508 1903.64 73.7508 Q1892.78 73.7508 1886.42 67.4314 Q1880.1 61.1119 1880.1 50.3365 Q1880.1 39.1965 1886.1 32.6746 Q1892.13 26.1121 1902.34 26.1121 Q1911.5 26.1121 1916.8 32.0264 Q1922.15 37.9003 1922.15 48.0275 M1914.7 45.84 Q1914.61 39.7232 1911.25 36.0774 Q1907.93 32.4315 1902.42 32.4315 Q1896.18 32.4315 1892.42 35.9558 Q1888.69 39.4801 1888.12 45.8805 L1914.7 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1960.67 34.1734 Q1959.42 33.4443 1957.92 33.1202 Q1956.46 32.7556 1954.68 32.7556 Q1948.36 32.7556 1944.96 36.8875 Q1941.59 40.9789 1941.59 48.6757 L1941.59 72.576 L1934.1 72.576 L1934.1 27.2059 L1941.59 27.2059 L1941.59 34.2544 Q1943.94 30.1225 1947.71 28.1376 Q1951.48 26.1121 1956.87 26.1121 Q1957.64 26.1121 1958.57 26.2337 Q1959.5 26.3147 1960.63 26.5172 L1960.67 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1986.8 12.096 L2037.96 12.096 L2037.96 18.9825 L2016.49 18.9825 L2016.49 72.576 L2008.27 72.576 L2008.27 18.9825 L1986.8 18.9825 L1986.8 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2042.99 27.2059 L2050.44 27.2059 L2050.44 72.576 L2042.99 72.576 L2042.99 27.2059 M2042.99 9.54393 L2050.44 9.54393 L2050.44 18.9825 L2042.99 18.9825 L2042.99 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2101.36 35.9153 Q2104.16 30.8922 2108.05 28.5022 Q2111.93 26.1121 2117.2 26.1121 Q2124.29 26.1121 2128.14 31.0947 Q2131.99 36.0368 2131.99 45.1919 L2131.99 72.576 L2124.49 72.576 L2124.49 45.4349 Q2124.49 38.913 2122.18 35.7533 Q2119.87 32.5936 2115.13 32.5936 Q2109.34 32.5936 2105.98 36.4419 Q2102.62 40.2903 2102.62 46.9338 L2102.62 72.576 L2095.12 72.576 L2095.12 45.4349 Q2095.12 38.8725 2092.81 35.7533 Q2090.5 32.5936 2085.68 32.5936 Q2079.97 32.5936 2076.61 36.4824 Q2073.25 40.3308 2073.25 46.9338 L2073.25 72.576 L2065.75 72.576 L2065.75 27.2059 L2073.25 27.2059 L2073.25 34.2544 Q2075.8 30.082 2079.36 28.0971 Q2082.93 26.1121 2087.83 26.1121 Q2092.77 26.1121 2096.22 28.6237 Q2099.7 31.1352 2101.36 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2185.66 48.0275 L2185.66 51.6733 L2151.39 51.6733 Q2151.88 59.3701 2156.01 63.421 Q2160.18 67.4314 2167.59 67.4314 Q2171.89 67.4314 2175.9 66.3781 Q2179.95 65.3249 2183.92 63.2184 L2183.92 70.267 Q2179.91 71.9684 2175.7 72.8596 Q2171.48 73.7508 2167.15 73.7508 Q2156.29 73.7508 2149.93 67.4314 Q2143.61 61.1119 2143.61 50.3365 Q2143.61 39.1965 2149.61 32.6746 Q2155.64 26.1121 2165.85 26.1121 Q2175.01 26.1121 2180.31 32.0264 Q2185.66 37.9003 2185.66 48.0275 M2178.21 45.84 Q2178.13 39.7232 2174.76 36.0774 Q2171.44 32.4315 2165.93 32.4315 Q2159.69 32.4315 2155.93 35.9558 Q2152.2 39.4801 2151.63 45.8805 L2178.21 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip762)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"294.164,1619.38 316.946,1160.43 339.729,854.463 362.511,650.485 385.294,514.5 408.076,423.843 430.859,363.405 453.641,323.113 476.423,296.252 499.206,278.345 521.988,266.406 544.771,258.447 567.553,253.141 590.336,249.604 613.118,247.246 635.901,245.674 658.683,244.626 681.465,243.927 704.248,243.461 727.03,243.151 749.813,242.944 772.595,242.806 795.378,242.714 818.16,242.652 840.943,242.611 863.725,242.584 886.507,242.566 909.29,242.554 932.072,242.546 954.855,242.54 977.637,242.537 1000.42,242.534 1023.2,242.533 1045.98,242.532 1068.77,242.531 1091.55,242.531 1114.33,242.53 1137.11,242.53 1159.9,242.53 1182.68,242.53 1205.46,242.53 1228.24,242.53 1251.03,242.53 1273.81,242.53 1296.59,242.53 1319.37,242.53 1342.16,242.53 1364.94,242.53 1387.72,242.53 1410.5,242.53 1433.29,242.53 1456.07,242.53 1478.85,242.53 1501.63,242.53 1524.42,242.53 1547.2,242.53 1569.98,242.53 1592.76,242.53 1615.55,242.53 1638.33,242.53 1661.11,242.53 1683.89,242.53 1706.68,242.53 1729.46,242.53 1752.24,242.53 1775.02,242.53 1797.81,242.53 1820.59,242.53 1843.37,242.53 1866.15,242.53 1888.94,242.53 1911.72,242.53 1934.5,242.53 1957.28,242.53 1980.06,242.53 2002.85,242.53 2025.63,242.53 2048.41,242.53 2071.19,242.53 2093.98,242.53 2116.76,242.53 2139.54,242.53 2162.32,242.53 2185.11,242.53 2207.89,242.53 2230.67,242.53 2253.45,242.53 2276.24,242.53 2299.02,242.53 2321.8,242.53 2344.58,242.53 2367.37,242.53 2390.15,242.53 2412.93,242.53 2435.71,242.53 2458.5,242.53 2481.28,242.53 2504.06,242.53 2526.84,242.53 2549.63,242.53 2572.41,242.53 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-2189.12,242.53 5055.7,242.53 \"/>\n</svg>\n```\n:::\n:::\n\n\n## Linear algebra\n\n",
    "supporting": [
      "julia-self-study_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}