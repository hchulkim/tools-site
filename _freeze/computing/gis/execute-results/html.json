{
  "hash": "e78fe0a61bab9a9e2ca372845f5ab0ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Geospatial with R\"\nsubtitle: \"Practicing GIS in R\"\nexecute:\n  freeze: auto\n---\n\n\n\n\nThis is my practice sections following blog posts by Andrew Heiss.\n\n## Middle earth maps with R\n\n[Middle earth maps with R](https://www.andrewheiss.com/blog/2023/04/26/middle-earth-mapping-sf-r-gis/)\n\n### Quick reminder: latitude vs. longitude\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(leaflet)\nlibrary(glue)\n\npoint_example <- tibble(x = 2, y = 1) %>% \n  mutate(label = glue::glue(\"{x} x, {y} y\\n{y} lat, {x} lon\"))\nlat_labs <- tibble(x = -3, y = seq(-2, 3, 1), label = \"Latitude\")\nlon_labs <- tibble(x = seq(-2, 3, 1), y = -2, label = \"Longitude\")\n\nggplot() +\n  geom_point(data = point_example, aes(x = x, y = y), size = 5) +\n  geom_label(data = point_example, aes(x = x, y = y, label = label),\n            nudge_y = 0.6, family = \"Overpass ExtraBold\") +\n  geom_text(data = lat_labs, aes(x = x, y = y, label = label),\n            hjust = 0.5, vjust = -0.3, family = \"Overpass Light\") +\n  geom_text(data = lon_labs, aes(x = x, y = y, label = label),\n            hjust = 1.1, vjust = -0.5, angle = 90, family = \"Overpass Light\") +\n  geom_hline(yintercept = 0) +\n  geom_vline(xintercept = 0) +\n  scale_x_continuous(breaks = seq(-2, 3, 1)) +\n  scale_y_continuous(breaks = seq(-2, 3, 1)) +\n  coord_equal(xlim = c(-3.5, 3), ylim = c(-3, 3)) +\n  labs(x = NULL, y = NULL) +\n  theme_minimal() +\n  theme(panel.grid.minor = element_blank(),\n        axis.text = element_blank()) \n```\n\n::: {.cell-output-display}\n![](gis_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n\n### Start the middle earth mapping\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoastline <- read_sf(\"data/ME-GIS/Coastline2.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\ncontours <- read_sf(\"data/ME-GIS/Contours_18.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\nrivers <- read_sf(\"data/ME-GIS/Rivers.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\nroads <- read_sf(\"data/ME-GIS/Roads.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\nlakes <- read_sf(\"data/ME-GIS/Lakes.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\nregions <- read_sf(\"data/ME-GIS/Regions_Anno.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\nforests <- read_sf(\"data/ME-GIS/Forests.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\nmountains <- read_sf(\"data/ME-GIS/Mountains_Anno.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n\nplacenames <- read_sf(\"data/ME-GIS/Combined_Placenames.shp\") %>% \n  mutate(across(where(is.character), ~iconv(., from = \"ISO-8859-1\", to = \"UTF-8\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmiles_to_meters <- function(x) {\n  x * 1609.344\n}\n\nmeters_to_miles <- function(x) {\n  x / 1609.344\n}\n\nclr_green <- \"#035711\"\nclr_blue <- \"#0776e0\"\nclr_yellow <- \"#fffce3\"\n\n# Format numeric coordinates with degree symbols and cardinal directions\nformat_coords <- function(coords) {\n  ns <- ifelse(coords[[1]][2] > 0, \"N\", \"S\")\n  ew <- ifelse(coords[[1]][1] > 0, \"E\", \"W\")\n  \n  glue(\"{latitude}°{ns} {longitude}°{ew}\",\n       latitude = sprintf(\"%.6f\", coords[[1]][2]),\n       longitude = sprintf(\"%.6f\", coords[[1]][1]))\n}\n```\n:::\n\n\n\n\n#### Exploring the different layers\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = coastline, linewidth = 0.25, color = \"grey50\")\n```\n\n::: {.cell-output-display}\n![](gis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Add rivers and lakes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = coastline, linewidth = 0.25, color = \"grey50\") +\n  geom_sf(data = rivers, linewidth = 0.2, color = clr_blue, alpha = 0.5) +\n  geom_sf(data = lakes, linewidth = 0.2, color = clr_blue, fill = clr_blue)\n```\n\n::: {.cell-output-display}\n![](gis_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "gis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}